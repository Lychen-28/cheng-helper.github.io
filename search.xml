<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一章 概述</title>
    <url>/%E7%AC%AC1%E7%AB%A0%20%E6%A6%82%E8%BF%B0/</url>
    <content><![CDATA[<h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><p>互连的自洽的计算机集合<br>自洽的计算机称为主机或端系统</p>
<h3 id="硬件基础"><a href="#硬件基础" class="headerlink" title="硬件基础"></a>硬件基础</h3><p>通信链路互连主机与网络设备</p>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>核心功能：资源共享，通过主机间信息交换实现</p>
<ol>
<li>硬件资源共享</li>
<li>软件…</li>
<li>信息…</li>
</ol>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="按覆盖范围"><a href="#按覆盖范围" class="headerlink" title="按覆盖范围"></a>按覆盖范围</h4><ol>
<li>个域网PAN</li>
<li>局域网LAN</li>
<li>城域网MAN</li>
<li>广域网WAN</li>
</ol>
<h4 id="按拓扑结构"><a href="#按拓扑结构" class="headerlink" title="按拓扑结构"></a>按拓扑结构</h4><ul>
<li>星形：常见于局域网，个域网<ul>
<li>优点：易于管理，诊断，隔离</li>
<li>缺点：中央故障，全网瘫痪，受限于中央结点端口数</li>
</ul>
</li>
<li>总线型：信息广播到所有结点，用于早期局域网<ul>
<li>优点：结构简单，易扩展</li>
<li>缺点：诊断，隔离困难，容易冲突</li>
</ul>
</li>
<li>环形：环上每个设备转发，到发送端清除，即自生自灭<ul>
<li>易避</li>
</ul>
</li>
</ul>
<h4 id="网络边缘"><a href="#网络边缘" class="headerlink" title="网络边缘"></a>网络边缘</h4><p>连接到网络的所有端系统</p>
<h4 id="接入网络"><a href="#接入网络" class="headerlink" title="接入网络"></a>接入网络</h4><p>用户通过借入网络实现与ISP网络，即网络核心连接</p>
<h5 id="ISP网络"><a href="#ISP网络" class="headerlink" title="ISP网络"></a>ISP网络</h5><p>由通信链路互连分组交换设备（路由器，交换机）构成的网络</p>
<h5 id="电话接入网络"><a href="#电话接入网络" class="headerlink" title="电话接入网络"></a>电话接入网络</h5><p>通过调制解调器modem将数字信号调制到模拟电话信号</p>
<h5 id="非对称数字用户线路ADSL"><a href="#非对称数字用户线路ADSL" class="headerlink" title="非对称数字用户线路ADSL"></a>非对称数字用户线路ADSL</h5><p>基于频分多路复用FDM，利用电话网络，实现电话语音通信与数字通信共享一条用户线路<br>非对称：下行带宽大于上行<br>独享式</p>
<h5 id="混合光缆同轴电缆HFC"><a href="#混合光缆同轴电缆HFC" class="headerlink" title="混合光缆同轴电缆HFC"></a>混合光缆同轴电缆HFC</h5><p>利用有线电视网络剩余传输能力与FDM<br>非对称<br>共享式</p>
<h5 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h5><p>例如以太网，wifi</p>
<h5 id="移动接入网络"><a href="#移动接入网络" class="headerlink" title="移动接入网络"></a>移动接入网络</h5><h4 id="网络核心"><a href="#网络核心" class="headerlink" title="网络核心"></a>网络核心</h4><p>见上方ISP</p>
<h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><h4 id="时延"><a href="#时延" class="headerlink" title="时延"></a>时延</h4><p>跳步：两个结点的直接链路<br>一个跳步所需时间组成：</p>
<ol>
<li>结点处理时延dc</li>
<li>排队时延dq</li>
<li>传输时延dt:分组长度L&#x2F;链路带宽R</li>
<li>传播时延dp:物理链路长度D&#x2F;信号传播速度V<br>时延带宽积G：传播时延dp*链路带宽R<br>丢包率n&#x3D;丢失分组总数Nl&#x2F;发送分组总数Ns<br>吞吐率Thr:瓶颈链路的带宽</li>
</ol>
<h2 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h2><p>网络设备间进行消息发送，接收，转发，需要遵守的约定</p>
<h3 id="协议三要素"><a href="#协议三要素" class="headerlink" title="协议三要素"></a>协议三要素</h3><ol>
<li>语法：实体间交换信息的格式，电平与结构，即由什么构成</li>
<li>语义：控制信息，如差错检测，地址信息，即各构成的具体含义</li>
<li>时序：实体间交换信息的顺序与适应彼此速度</li>
</ol>
<h2 id="数据交换技术"><a href="#数据交换技术" class="headerlink" title="数据交换技术"></a>数据交换技术</h2><p>网络核心用以实现中继续转发</p>
<h3 id="电路交换"><a href="#电路交换" class="headerlink" title="电路交换"></a>电路交换</h3><p>通过中间交换结点为两台主机之间建立一条专用通信线路——电路，对通信内容不做任何干预和缓存，即透明传输，交换效率高，数据传输结束就拆除<br>优点：实时性高，时延小<br>缺点：信道利用率低，速率单一</p>
<h3 id="报文交换"><a href="#报文交换" class="headerlink" title="报文交换"></a>报文交换</h3><p>也称消息交换<br>信息附加地址等控制信息，在结点间以存储-转发方式传送<br>必须接收完整报文再开始转发<br>每个结点延迟时间等于接收时间和排队延迟时间只和<br>优点：信道利用率高，速率可变<br>缺点：可能由于存储空间不够，丢弃报文，时延较长</p>
<h3 id="分组交换"><a href="#分组交换" class="headerlink" title="分组交换"></a>分组交换</h3><p>将报文分割成较小数据块，附上序号等控制信息，构成分组，在目的地组装<br>存储-转发方式<br>优点：</p>
<ol>
<li>交换设备存储容量要求低</li>
<li>交换速度快<ol>
<li>利用主存进行</li>
<li>多个分组在不同链路并行发送</li>
</ol>
</li>
<li>可靠传输效率高：出错重传代价低</li>
<li>公平:因为交替排队，短的先送达<br>误码率pe越低，最佳分组长度Lopt越长，最高信道利用率nmax随头长度h和误码率pe增大而降低</li>
</ol>
<h2 id="计算机网络体系结构"><a href="#计算机网络体系结构" class="headerlink" title="计算机网络体系结构"></a>计算机网络体系结构</h2><p>将复杂的网络通信功能划分为若干层协议<br>核心思路：上一层的功能建立在下一层的功能基础上，并且每一层内遵守一定的协议</p>
<h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><p>分为7层<br>第N层接收第N+1层协议数据单元PDU，按第N层协议封装成第N层PDU，再通过层间接口给第N-1层<br>物理层之间为实通信<br>其他对等层虚拟通信</p>
<ol>
<li>物理层：在传输介质上实现无结构比特流传输</li>
<li>数据链路层：实现相邻结点间数据可靠传输与寻址，PDU为帧</li>
<li>网络层：通过转发和路由，将分组通过交换网络传送至目的主机，PDU为分组或包</li>
<li>传输层：第一个端到端层次，也是进程-进程层次，发生在两个主机的进程之间，通过复用，分解，可靠数据传输，流量控制，拥塞控制，防止报文丢失，PDU为报文段</li>
<li>会话层：用户与用户连接，建立会话时核实双方身份是否有权参加，会话建立后，管理进程间对话</li>
<li>表示层：管理应用实体间交换数据</li>
<li>应用层：为用户提供使用网络应用的接口<br>1-3为网络低层，5-7高</li>
</ol>
<h3 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h3><ul>
<li>数据单元：层的实体间传送的比特组</li>
<li>PDU：协议数据单元，对等层间遵循同一协议的数据单元</li>
<li>SDU:服务数据单元</li>
<li>PCI:协议控制信息</li>
<li>SAP:服务访问点，N+1层通过SAP访问N层<br>N+1层PDU通过SAP变为N层SDU，即第N层将高一层的PDU视为SDU<br>N层在SDU上加上PCI成为N层PDU<br>第N层可以把N+1层PCU分成多份<br>到达目的地后，层层去掉PCI，恢复PCU原始结构</li>
</ul>
<h4 id="PDU在各层叫法"><a href="#PDU在各层叫法" class="headerlink" title="PDU在各层叫法"></a>PDU在各层叫法</h4><ul>
<li>物理层：比特流</li>
<li>数据链路层：帧</li>
<li>网络层：分组或包</li>
<li>传输层：报文段</li>
<li>应用层：报文</li>
</ul>
<h3 id="服务源语"><a href="#服务源语" class="headerlink" title="服务源语"></a>服务源语</h3><ul>
<li>Request:请求</li>
<li>Indication:指示</li>
<li>Response:响应</li>
<li>Comfirm:证实</li>
</ul>
<h2 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP&#x2F;IP参考模型"></a>TCP&#x2F;IP参考模型</h2><ul>
<li>应用层：WWW,HTTP,FTP,SMTP,POP3，传输协议分为传输控制协议TCP和用户数据报协议UDP</li>
<li>传输层：解决端到端可靠性，保证正确顺序到达，只在应用层和网络层间传输</li>
<li>网络互联层：核心，负责把分组发往目的主机，核心协议是IP，是无连接不可靠协议</li>
<li>网络接口层：对应数据链路层和物理层</li>
</ul>
<h2 id="五层参考模型"><a href="#五层参考模型" class="headerlink" title="五层参考模型"></a>五层参考模型</h2><p>最常用，最接近现实网络</p>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章 网络应用</title>
    <url>/%E7%AC%AC2%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<h2 id="从体系结构角度分类"><a href="#从体系结构角度分类" class="headerlink" title="从体系结构角度分类"></a>从体系结构角度分类</h2><h3 id="客户-服务器C-S"><a href="#客户-服务器C-S" class="headerlink" title="客户&#x2F;服务器C&#x2F;S"></a>客户&#x2F;服务器C&#x2F;S</h3><p>最典型，最基本<br>服务器程序需先运行，有固定网络地址，长期运行</p>
<h3 id="纯P2P"><a href="#纯P2P" class="headerlink" title="纯P2P"></a>纯P2P</h3><p>对等端软件运行在普通用户计算设备上，可直接与其他对等端通信<br>由于对等端动态加入或离开，并没有中心服务器，很难知道哪些对等端在线，地址与提供的服务</p>
<h3 id="混合结构网络"><a href="#混合结构网络" class="headerlink" title="混合结构网络"></a>混合结构网络</h3><p>每个用户通过C&#x2F;S方式向服务器注册自己的网络地址，声明提供的服务与共享的资源，并发现其他用户</p>
<h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>基本通信方式：C&#x2F;S<br>进程间遵循应用层协议交换应用层报文M<br>通过套接字将M传输给传输层<br>传输层需要为每个套接字分配一个编号：端口号<br>通过网络层地址（ip）与端口号标识应用程序</p>
<h3 id="传输层提供的服务"><a href="#传输层提供的服务" class="headerlink" title="传输层提供的服务"></a>传输层提供的服务</h3><h4 id="面向连接的可靠字节流传输服务TCP"><a href="#面向连接的可靠字节流传输服务TCP" class="headerlink" title="面向连接的可靠字节流传输服务TCP"></a>面向连接的可靠字节流传输服务TCP</h4><ul>
<li>面向连接的服务：通过交换传输层控制信息，完成握手，建立一天全双工的逻辑TCP连接，发送完毕拆除</li>
<li>可靠的数据传送服务：端到端无差错，按序交付</li>
</ul>
<h4 id="无连接的不可靠数据报传输服务UDP"><a href="#无连接的不可靠数据报传输服务UDP" class="headerlink" title="无连接的不可靠数据报传输服务UDP"></a>无连接的不可靠数据报传输服务UDP</h4><p>仅提供最小的“尽力”服务，没有握手过程，不保证报文到达接收进程，也可能乱序到达</p>
<h4 id="TCP与UDP均不提供端到端吞吐量与时延保障服务"><a href="#TCP与UDP均不提供端到端吞吐量与时延保障服务" class="headerlink" title="TCP与UDP均不提供端到端吞吐量与时延保障服务"></a>TCP与UDP均不提供端到端吞吐量与时延保障服务</h4><h2 id="域名系统DNS"><a href="#域名系统DNS" class="headerlink" title="域名系统DNS"></a>域名系统DNS</h2><p>用户代理：使用网络应用的客户端软件定期访问服务器IP地址与端口号<br>域名：更容易读懂的代表ip地址与端口号的名字<br>DNS的任务：将域名映射为IP地址，即域名解析，需要建立分布式数据库，存储映射关系<br>层次树状结构的命名：……。三级域名。二级域名。顶级域名<br>顶级域名：国家，通用，基础结构域名arpa，用于反向域名解析</p>
<h3 id="域名服务器"><a href="#域名服务器" class="headerlink" title="域名服务器"></a>域名服务器</h3><p>53端口<br>权威域名服务器：保存区中所有映射<br>顶级域名服务器：管理在该顶级域名注册的所有二级域名<br>根域名服务器：最重要，知道所有顶级域名服务器的域名和ip，共有13个，从a到m<br>本地域名服务器：任何主机在网络地址配置时都会配置一个<br>中间域名服务器：在权威和根之间</p>
<h4 id="解析过程"><a href="#解析过程" class="headerlink" title="解析过程"></a>解析过程</h4><p>无论递归还是迭代，顺序都是，本地，根，顶级，权威<br>由于根压力很大，增加缓存机制，跳过根域名查询，提高查询效率</p>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>Web应用的应用层协议，HTTP&#x2F;1.1是主流<br>80端口</p>
<h3 id="HTTP连接"><a href="#HTTP连接" class="headerlink" title="HTTP连接"></a>HTTP连接</h3><p>基于传输层的TCP传输报文，向服务器发送请求报文之前需建立TCP连接</p>
<h4 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h4><p>HTTP&#x2F;1.0默认使用非持久连接，每次请求传输一个对象都需要建立一个TCP连接<br>1.1默认流水方式持久连接，只在服务端返回报文中显式添加connection:close首部行时断开<br>非持久连接，并行连接，流水方式，非流水方式图见P60</p>
<h3 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h3><p>起始行，首部行，空白行，实体主体</p>
<h4 id="起始行"><a href="#起始行" class="headerlink" title="起始行"></a>起始行</h4><p>请求和响应报文主要区别是起始行<br>请求：方法，URL，协议版本<br>响应：协议版本，状态码，短语<br>方法：</p>
<ul>
<li>GET:请求读取URL标识的信息</li>
<li>HEAD:请求读取URL标识的信息的首部</li>
<li>POST:给服务器添加信息</li>
<li>OPTION:请求一些选项信息</li>
<li>PUT:在指定URL存储文档<br>状态码：短语</li>
<li>100:continue</li>
<li>200:ok</li>
<li>301:moved permanently</li>
<li>400:bad request</li>
<li>401:unauthorized </li>
<li>404:not found</li>
<li>505:http version not supported</li>
</ul>
<h4 id="首部行"><a href="#首部行" class="headerlink" title="首部行"></a>首部行</h4><p>用于携带附加信息，可有0到多行</p>
<h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><p>无状态协议：HTTP服务器并不保存客户的任何信息<br>Cookie用于在无状态的HTTP之上建立用户会话<br>存放于报文首部行，每个浏览器独立存储<br>永久Cookie：存放于硬盘<br>会话Cookie：存放于内存，关闭浏览器消失</p>
<h2 id="电子邮件系统"><a href="#电子邮件系统" class="headerlink" title="电子邮件系统"></a>电子邮件系统</h2><p>组成：邮件服务器，邮件传输协议，用户代理，邮件读取协议<br>地址：邮箱名@邮箱所在主机域名<br>核心：邮件服务器，用于接发邮件，报告传送情况</p>
<h3 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h3><p>电子邮件核心应用层协议<br>实现邮件服务器间或与用户代理间邮件传输<br>使用TCP持久连接，25端口</p>
<h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><p>只能传送7位ASCII码文本内容，通过MIME将非该种文本转换为这种<br>内容不能包含CRLF.CRLF，用于识别内容结束<br>“推动”协议，与HTTP“拉动”协议不同</p>
<h3 id="电子邮件格式"><a href="#电子邮件格式" class="headerlink" title="电子邮件格式"></a>电子邮件格式</h3><p>首部，空白，主体</p>
<h3 id="邮件读取协议"><a href="#邮件读取协议" class="headerlink" title="邮件读取协议"></a>邮件读取协议</h3><h4 id="邮局协议POP3"><a href="#邮局协议POP3" class="headerlink" title="邮局协议POP3"></a>邮局协议POP3</h4><p>TCP，110端口<br>3个阶段：授权，事务处理，更新<br>事务处理读取后会标记删除，更新阶段删除</p>
<h4 id="IMAP"><a href="#IMAP" class="headerlink" title="IMAP"></a>IMAP</h4><p>支持创建远程文件夹，与只读部分邮件<br>网络带宽压力更小</p>
<h4 id="HTTP-1"><a href="#HTTP-1" class="headerlink" title="HTTP"></a>HTTP</h4><p>最流行，此时用户代理向邮件服务器发送也使用HTTP，邮件服务器间还是SMTP</p>
<h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><p>消除不同操作系统下处理文件的不兼容性<br>C&#x2F;S应用<br>使用两个并行的TCP连接<br>21端口的控制连接是持久的，整个会话期间打开<br>20端口的数据连接传送完毕即关闭，非持久<br>即带外控制，使用同一个连接控制和处理数据为带内控制</p>
<h2 id="P2P"><a href="#P2P" class="headerlink" title="P2P"></a>P2P</h2><p>对服务器依赖很小，随时加入离开，伸缩性强</p>
<h3 id="当有n个用户，各下载大小为F的文件"><a href="#当有n个用户，各下载大小为F的文件" class="headerlink" title="当有n个用户，各下载大小为F的文件"></a>当有n个用户，各下载大小为F的文件</h3><h4 id="C-S方式"><a href="#C-S方式" class="headerlink" title="C&#x2F;S方式"></a>C&#x2F;S方式</h4><p>服务器需上传nF<br>每个用户需下载F<br>即最小完成分发时间为<br>nF&#x2F;服务器上传带宽us<br>与<br>F&#x2F;最慢客户下载带宽dmin<br>中最大值</p>
<h4 id="P2P方式"><a href="#P2P方式" class="headerlink" title="P2P方式"></a>P2P方式</h4><p>每个对等方在接收到部分文件后，马上可以将拥有的数据向其他对等方分发<br>文件分发最快时间当n足够大，趋近于常量</p>
<h2 id="Socket"><a href="#Socket" class="headerlink" title="Socket"></a>Socket</h2><p>套接字地址由ip+port组成<br>SOCK_STREAM：面向TCP接口<br>SOCK_DGRAM：面向UDP<br>服务器函数：listen,accept<br>客户端函数：connect</p>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章 传输层</title>
    <url>/%E7%AC%AC3%E7%AB%A0%20%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
    <content><![CDATA[<p>是除应用层外唯一的端到端层，即只存在于端系统，路由器等网络设备中实现<br>提供端到端报文传输服务<br>在传输层角度，端不是主机，而是其中应用程序</p>
<h2 id="基本服务"><a href="#基本服务" class="headerlink" title="基本服务"></a>基本服务</h2><p>核心任务：提供端到端逻辑通信服务<br>两个主要协议：TCP,UDP<br>分段：将应用层报文切分并封装上首部信息（用于分解）成传输层报文段，反过程为重组<br>其他重要功能：差错检验，复用，分解，流量控制，拥塞控制</p>
<h3 id="寻址和端口"><a href="#寻址和端口" class="headerlink" title="寻址和端口"></a>寻址和端口</h3><p>标识应用进程的寻址方式：IP地址+端口号port</p>
<h4 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h4><p>共16位，即65536个<br>0-1023为熟知端口号</p>
<h2 id="复用和分解"><a href="#复用和分解" class="headerlink" title="复用和分解"></a>复用和分解</h2><p>复用：同一主机，多个应用程序利用同一传输协议进行网络通信<br>分解：根据首部信息，将接收到的报文段交付给正确应用程序<br>关键：传输层协议唯一标识一个套接字</p>
<h3 id="无连接的多路复用和分解"><a href="#无连接的多路复用和分解" class="headerlink" title="无连接的多路复用和分解"></a>无连接的多路复用和分解</h3><p>重要依据：创建UDP套接字时自动分配或使用bind()绑定端口号<br>UDP报文段包括：应用数据，源端口号，目的端口号<br>通过目的端口号实现将报文段分解到相应套接字<br>唯一标识一个UDP套接字：目的IP地址，目的端口号<br>目的IP地址位于网络层IP数据报首部字段</p>
<h3 id="面向连接的复用和分解"><a href="#面向连接的复用和分解" class="headerlink" title="面向连接的复用和分解"></a>面向连接的复用和分解</h3><p>唯一标识TCP套接字四元组：源&#x2F;目标ip，端口<br>也唯一标识TCP连接<br>两种Ip地址位于网络层IP数据报首部字段<br>端口号位于TCP报文段首部字段</p>
<h2 id="等-停与滑动窗口"><a href="#等-停与滑动窗口" class="headerlink" title="等-停与滑动窗口"></a>等-停与滑动窗口</h2><p>TCP报文段要交给IP传送，IP只提供尽力服务，即不可靠数据传输服务<br>因此需要在不可靠的网络层基础上实现可靠数据传输</p>
<h3 id="可靠数据传输"><a href="#可靠数据传输" class="headerlink" title="可靠数据传输"></a>可靠数据传输</h3><p>理想传输信道：不产生差错，按序交付<br>可能出现的问题：</p>
<ul>
<li>比特差错</li>
<li>乱序</li>
<li>数据丢失<br>实现可靠传输的措施：</li>
<li>差错检验：通过数据上冗余差错编码信息，实现传输过程比特差错检验与纠正</li>
<li>确认：基于差错编码，如果接收方确认数据没差错，则发送ACK数据包，即肯定确认，否则发送NAK数据包，即否定确认</li>
<li>重传：如果发送方收到NAK，重新发送</li>
<li>序号：解决乱序到达与重复接收并提交问题</li>
<li>计时器：计时器超时未收到接收方确认，则重发</li>
</ul>
<h3 id="停-等协议"><a href="#停-等协议" class="headerlink" title="停-等协议"></a>停-等协议</h3><p>最简单的自动重传请求协议ARQ<br>基本策略：<br>发送一个报文段后，停下来等待接收方确认，NAK或超时则重发</p>
<h4 id="变化与细节"><a href="#变化与细节" class="headerlink" title="变化与细节"></a>变化与细节</h4><ol>
<li>ACK与NAK也需要差错检验，如果发送方发现有差错，采取有错推断原则</li>
<li>序列号只需要一位，即0和1两种，模2运算实现向前移动</li>
<li>一般不实用NAK，通过ACK加序列号发送，重复ACK序列号组合视为NAK</li>
<li>计时器过短会导致过多数据重传，过长会导致传输对数据包丢失反应迟钝</li>
</ol>
<h3 id="滑动窗口协议"><a href="#滑动窗口协议" class="headerlink" title="滑动窗口协议"></a>滑动窗口协议</h3><p>解决停-等协议信道利用率低的问题<br>信道利用率：<br>发送信息时间与总时间只比<br>由于RTT远远大于发送时间，所以停-等低<br>例题与公式见P102<br>解决思路：</p>
<ul>
<li>增加序列号范围，以标记多个同时发送的数据包</li>
<li>发送方或接收方需缓存多个分组，保证按序提交</li>
</ul>
<h4 id="流水线协议（管道协议）"><a href="#流水线协议（管道协议）" class="headerlink" title="流水线协议（管道协议）"></a>流水线协议（管道协议）</h4><p>在等待确认之前，连续发送多个分组<br>如3个，则引导利用率提高三倍<br>最典型的流水线协议：滑动窗口协议</p>
<h4 id="滑动窗口协议-1"><a href="#滑动窗口协议-1" class="headerlink" title="滑动窗口协议"></a>滑动窗口协议</h4><p>发送方需缓存已发送但未收到确认的分组，方便重发<br>接收方需缓存已正确接收的分组，实现按序提交<br>即发送方和接收方各维护一个窗口Ws和Wr<br>最具代表性的为：</p>
<ul>
<li>回退N步协议GBN</li>
<li>选择重传协议SR</li>
</ul>
<h4 id="GBN"><a href="#GBN" class="headerlink" title="GBN"></a>GBN</h4><p>发送端缓存能力较强，即Ws较大，Wr往往为1<br>只要发送窗口不满就能持续发送<br>累计确认方式：<br>当收到ACKn表示n以下的数据都已被正确接收，窗口滑动至n+1并重启计时器<br>当n小于窗口基序号，不予理会<br>只有一个计时器，指向窗口基序号，超时，重发所有窗口中分组<br>优点：接收方操作简单<br>缺点：会丢弃所有未按序到达分组，浪费网络资源<br>适用于：信道丢包率低，误码率低，接收方缓存能力低的情况</p>
<h4 id="SR"><a href="#SR" class="headerlink" title="SR"></a>SR</h4><p>避免正确到达分组被接收方丢弃<br>增加接收方缓存能力，Wr&gt;1，往往Ws&#x3D;Wr<br>减少不必要的重传，改进协议性能<br>发送方仅重传未被正确接收的分组<br>在两个窗口中必须有足够序列号位数k，实现每一个分组序列号唯一，即窗口总数&#x3D;2^k</p>
<p>无论GBN还是SR，引导利用率都是Ws倍停等</p>
<h2 id="用户数据报协议UDP"><a href="#用户数据报协议UDP" class="headerlink" title="用户数据报协议UDP"></a>用户数据报协议UDP</h2><p>提供无连接，不可靠，尽力传输服务<br>可能乱序到达，没有拥塞控制<br>有复用，分解与简单差错检验，几乎与网络层的IP相同<br>通过设计可靠传输机制，可以实现可靠传输<br>典型应用：DNS，媒体应用等希望速率高，且能容忍部分数据丢失的情况<br>优点：</p>
<ul>
<li>容易控制发送什么数据与何时发，无拥塞控制，传输速率更高</li>
<li>无需建立连接，更少时延</li>
<li>无需维护连接状态，系统开销小</li>
<li>首部开销小：8字节，TCP20</li>
</ul>
<h3 id="UDP数据报结构"><a href="#UDP数据报结构" class="headerlink" title="UDP数据报结构"></a>UDP数据报结构</h3><p>首部四个字段，每个2字节</p>
<ul>
<li>源端口号</li>
<li>目的端口号</li>
<li>长度</li>
<li>校验和</li>
</ul>
<h4 id="校验和"><a href="#校验和" class="headerlink" title="校验和"></a>校验和</h4><p>检验传输过程，数据是否发生过改变<br>所有数据按16位对齐，依次相加，最高位进位的数字加到最低位，最后将结果取反，得到校验和<br>没有差错恢复能力，丢弃错误报文段，或交给应用层，由应用层决策如何处理</p>
<h2 id="传输控制协议TCP"><a href="#传输控制协议TCP" class="headerlink" title="传输控制协议TCP"></a>传输控制协议TCP</h2><p>必须先建立TCP连接，最后释放<br>无差错，不丢失，不重复<br>面向字节流：TCP把数据视为无结构字节流<br>全双工通信：通信双方都能随时向信道发送和接收数据，两端也设有缓存<br>发送时，TCP可以从缓存中取出数据并放入报文段<br>取出的数据量受限于最大报文段长度MSS，即报文段封装的应用层数据的最大长度<br>接收时，TCP将数据放入缓存，供应用程序适时读取<br>TCP将大文件划分成长度为MSS的若干块，</p>
<h3 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h3><p>图见P116</p>
<ul>
<li>第一次握手：<ul>
<li>A的TCP向B发出连接请求报文段（SYN段）</li>
<li>不含应用层数据</li>
<li>同部位SYN为1</li>
<li>指定初始序列号seq&#x3D;x</li>
<li>SYN段要消耗一个序号</li>
<li>此时A处于SYN_SENT状态</li>
<li>B处于LISTEN状态</li>
</ul>
</li>
<li>第二次握手<ul>
<li>如果B同意连接，发回确认报文段（SYNACK段）</li>
<li>不包含应用层数据</li>
<li>SYN&#x3D;1</li>
<li>ACK&#x3D;1</li>
<li>确认序号ack_seq&#x3D;x+1</li>
<li>自己选择的初始序号seq&#x3D;y</li>
<li>此时B处于SYN_RCVD状态</li>
</ul>
</li>
<li>第三次握手<ul>
<li>A接收到SYNACK段，向B发送确认报文段</li>
<li>可携带应用层数据</li>
<li>ACK&#x3D;1</li>
<li>SYN&#x3D;0(因为已完成连接)</li>
<li>seq&#x3D;x+1</li>
<li>ack_seq&#x3D;y+1</li>
<li>此时A处于ESTABLISHED 状态</li>
<li>B收到确认消息后也进入ESTABLISHED状态</li>
</ul>
</li>
</ul>
<h3 id="为什么不用二次握手"><a href="#为什么不用二次握手" class="headerlink" title="为什么不用二次握手"></a>为什么不用二次握手</h3><ul>
<li>确保双方完全了解对方状态</li>
<li>预防过期，失效的连接申请到达，导致半连接，即只有一方建立了连接</li>
</ul>
<h3 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h3><p>任何一方都能请求终止连接，释放资源</p>
<ul>
<li>第一次挥手<ul>
<li>A向B发送释放连接报文段</li>
<li>FIN&#x3D;1</li>
<li>seq&#x3D;u</li>
<li>此时A处于FIN_WAIT状态，能收不能发数据</li>
</ul>
</li>
<li>第二次挥手<ul>
<li>B向A响应</li>
<li>ACK&#x3D;1</li>
<li>seq&#x3D;v</li>
<li>确认序号ack_seq&#x3D;u+1</li>
<li>B处于CLOSE_WAIT状态，仍可发数据</li>
</ul>
</li>
<li>第三次挥手<ul>
<li>B向A发送释放连接报文段</li>
<li>FIN&#x3D;1</li>
<li>seq&#x3D;w</li>
<li>确认序号ack_seq&#x3D;u+1</li>
<li>此时B处于LAST_ACK，不再能发送数据</li>
</ul>
</li>
<li>第四次挥手<ul>
<li>A向B发送响应</li>
<li>ACK&#x3D;1</li>
<li>seq&#x3D;u+1</li>
<li>ack_seq&#x3D;w+1</li>
<li>A发送后进入TIME_WAIT，为确保另一端能正确接收到，等待一段时间后再CLOSE</li>
<li>等待时机为2最大段生存时间MSL</li>
<li>B收到后CLOSE</li>
</ul>
</li>
</ul>
<h3 id="可靠数据传输-1"><a href="#可靠数据传输-1" class="headerlink" title="可靠数据传输"></a>可靠数据传输</h3><p>实现机制：</p>
<ul>
<li>差错编码</li>
<li>确认：累积确认</li>
<li>序号：每个字节编号</li>
<li>重传：主要针对计时器超时和三次确认</li>
<li>计时器：单一的重传计时器，自适应算法设置超时时间，当报文传送给IP，启动计时器<br>基于：滑动窗口协议，发送窗口大小动态变化，即<br>Ws&#x3D;流量控制（接收端窗口）RcvWin与拥塞控制窗口CongWin中最小值</li>
</ul>
<h4 id="超时时间"><a href="#超时时间" class="headerlink" title="超时时间"></a>超时时间</h4><p>比RTT大一些即可<br>通过RTT采样SampleRTT来估计RTT大小，即某报文段发出到确认收到时间间隔，取未重传的某次发送时间<br>由于SampleRTT会随网络情况波动，因此采用：<br>指数加权移动平均的方法来计算均值EstimatedRTT<br>公式见P120<br>阿尔法为加权系数，通常为0.125<br>越新的RTT计算新均值权重越大<br>RTT偏差DevRTT用于表现变化程度，即网络平稳程度，越小越平稳<br>贝塔为加权系数，通常为0.25<br>超时时间TimeoutInterval&#x3D;ERTT+4DevRTT<br>超时即发送发送窗口基序号SendBase指向的报文段<br>同报文段每次重传下一次超时时间都是之前的两倍，而不是上面计算出的值，即指数型增长，这也增加了端到端延迟，因此添加了：<br>快速重传，即收到3次同样ACK即视为NAK，立即重发<br>注意：</p>
<ul>
<li>此处为第四次收到ack_seq&#x3D;x，即重发seq&#x3D;x</li>
<li>发送seq期待收到的ack_seq为期待的下一个数据的序号</li>
</ul>
<h3 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h3><p>即控制发送窗口大小<br>避免发送方速度太快，超过接收方接收能力，导致被淹没<br>不仅用于传输层，也用于数据链路层<br>TCP首部2字节告知接受窗大小，发送窗不能超过该值</p>
<h3 id="拥塞控制"><a href="#拥塞控制" class="headerlink" title="拥塞控制"></a>拥塞控制</h3><p>避免发送方速度太快，超过网络处理能力，数据拥挤在中间设备<br>分为拥塞预防和拥塞消除<br>通过超时和三次重复ack判断是否发生拥塞<br>通过窗口大小调节发送速率</p>
<h4 id="基本策略"><a href="#基本策略" class="headerlink" title="基本策略"></a>基本策略</h4><p>发送端维持一个拥塞窗口CongWin，表示未收到确认的情况下，可连续发送的字节数，初始为1MSS<br>未发生拥塞时，加性增大窗口<br>发生时，乘性减小窗口<br>即AIMD<br>这是一种拥塞消除<br>一般分为：</p>
<ul>
<li>慢启动阶段：每收到一个确认，CongWin+1MSS，即每经过一个RTT，翻倍</li>
<li>拥塞避免阶段：CongWin达到阈值Threshold后，每个RTT，发送的报文段全部确认后，CongWin+1MSS</li>
<li>发生拥塞：<ul>
<li>Threshold&#x3D;CongWin&#x2F;2 </li>
<li>CongWin&#x3D;1MSS</li>
<li>称为TCP Tahoe算法</li>
</ul>
</li>
<li>快速重传：收到3次重复确认，立即发送重复确认报文段</li>
<li>快速恢复：<ul>
<li>当发生超时，表示拥塞严重</li>
<li>当发送三次确认，表示拥塞不严重，直从新阈值开始，进入拥塞避免阶段</li>
<li>称为TCP Reno算法</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第四章 网络层</title>
    <url>/%E7%AC%AC4%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
    <content><![CDATA[<p>关注的是如何把网络层数据报送达目的主机<br>两个重要功能：</p>
<ul>
<li>转发：路由器都有路由转发表，使用网络层首部地址字段作为键，查表确定将分组转发到哪条链路</li>
<li>路由选择：路由器运行路由协议，在网络上收集计算路由需要的信息，计算路由后存储到路由转发表<br>另一个重要功能：<br>连接建立：从源主机到目的主机的一条路径，每个经过的网络设备都要参与<br>根据是否在网络层提供连接服务分为：</li>
<li>虚电路VC：仅在网络层提供连接服务</li>
<li>数据报网络：仅在网络层提供无连接服务</li>
</ul>
<h2 id="数据报网络"><a href="#数据报网络" class="headerlink" title="数据报网络"></a>数据报网络</h2><p>按目的主机地址进行路由选择的网络<br>如：因特网<br>无连接<br>每个分组作为独立的数据报进行传送<br>每个数据报带有源和目的主机地址<br>发送与接收顺序不一定相同，路径不一定一致，接受方需要排序生成原始报文<br>出现差错由传输层协议，即端系统解决，只维护转发信息</p>
<h2 id="虚电路网络"><a href="#虚电路网络" class="headerlink" title="虚电路网络"></a>虚电路网络</h2><p>为网络层逻辑连接，并不需要分配独立资源<br>仅在建立VC时需要路由选择<br>虚电路分组通过某链路时占用全部带宽<br>分组不包含源和目的地址，仅含有一个VCID<br>虚电路标识VCID：网络设备根据分组携带的VCID判断所属的虚电路，从而决策转发<br>往往用于数据通信网络<br>按序到达接收端<br>为避免交换大量信息，与缩短VCID长度，同一条VC在路径上的各个链路有不同VCID，因此网络设备需要记录VCID间接续关系<br>根据实用时间：</p>
<ul>
<li>永久型虚电路：建立时间可忽略</li>
<li>交换型虚电路：临时建立，通信结束立即拆除<br>与数据报网络主要差别：<br>将顺序控制，差错控制和流量控制等功能交由网络来完成还是端系统完成</li>
</ul>
<h2 id="异构网络互连"><a href="#异构网络互连" class="headerlink" title="异构网络互连"></a>异构网络互连</h2><p>异构网络：通信技术与运行协议不同的网络<br>实现异构网络互连：</p>
<ul>
<li>协议转换：利用中间设备实现异构网络间的数据分组转换与转发，可以在物理层外任一层实现</li>
<li>构建虚拟互联网络：在现有异构网络的基础上建立同构虚拟互联网络，只封装，提取和转发虚拟互联网络分组<br>IP网络是虚拟互联网，Internet是利用IP的最大互联网络，由网络层实现网络互连<br>隧道技术：解决同构网络互连<br>网络互联设备：</li>
<li>物理层：中继器，集线器</li>
<li>数据链路层：交换机，网桥</li>
<li>网络层：路由器</li>
<li>网络层以上：网关</li>
</ul>
<h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><h3 id="分布式路由查询："><a href="#分布式路由查询：" class="headerlink" title="分布式路由查询："></a>分布式路由查询：</h3><p>每个输入端口都存有转发表副本</p>
<h3 id="输入端口："><a href="#输入端口：" class="headerlink" title="输入端口："></a>输入端口：</h3><p>有缓存排队功能，从物理端口接收到的信号，还原成数据链路层帧，提取IP数据报，根据IP地址检索路由表，决定交换到哪个输出端口<br>交换结构：将输入端口的IP数据报交换到指定输出端口</p>
<ul>
<li>基于内存交换：性能和价格最低</li>
<li>基于总线交换：同时一个分组通过，其他等待</li>
<li>基于网络交换：性能和价格最高</li>
</ul>
<h3 id="输出端口"><a href="#输出端口" class="headerlink" title="输出端口"></a>输出端口</h3><ul>
<li>有缓存排队功能，通常先到先服务FCFS</li>
<li>从队列取出进行数据链路层帧封装，通过物理线路发送</li>
<li>排队到达一定大小，其后到达分组被丢弃</li>
</ul>
<h3 id="路由处理器"><a href="#路由处理器" class="headerlink" title="路由处理器"></a>路由处理器</h3><p>执行路由器各种指令</p>
<ul>
<li>检索路由表过程如果有一条路由项匹配成功：选择该接口转发</li>
<li>没有匹配项：通过默认路由接口转发</li>
<li>多个匹配项：最长前缀匹配选择</li>
</ul>
<h2 id="网络层拥塞控制"><a href="#网络层拥塞控制" class="headerlink" title="网络层拥塞控制"></a>网络层拥塞控制</h2><h3 id="网络拥塞"><a href="#网络拥塞" class="headerlink" title="网络拥塞"></a>网络拥塞</h3><p>需要传输的总量大于传输能力，导致缓冲区满，无法接收到新分组，即发生拥塞<br>网络负载在膝点附近，吞吐量和分组平均延迟达到理想平衡，网络使用效率最高<br>在网络层，拥塞控制同样是通过限制端系统向网络发送数据的速率来实现</p>
<ul>
<li>拥塞预防：增加网络资源</li>
<li>拥塞消除：减小网络负载<br>流量控制与拥塞控制：</li>
<li>流量控制：<ul>
<li>主要考虑：接收端的数据处理能力</li>
<li>目的：使发送端发送速率低于接收端接收能力</li>
</ul>
</li>
<li>拥塞控制：<ul>
<li>主要考虑：端系统之间的网络环境</li>
<li>目的：使网络负载低于网络传送能力</li>
</ul>
</li>
</ul>
<h3 id="常用的拥塞控制措施"><a href="#常用的拥塞控制措施" class="headerlink" title="常用的拥塞控制措施"></a>常用的拥塞控制措施</h3><h4 id="流量感知路由"><a href="#流量感知路由" class="headerlink" title="流量感知路由"></a>流量感知路由</h4><p>拥塞预防<br>网络被抽象成无向带权图<br>根据权值，将网络流量引导到不同链路<br>权值：以带宽，延迟，负载为变量的函数<br>频繁切换引导到的链路会产生振荡<br>解决振荡：</p>
<ul>
<li>多路径路由：流量分散到多个链路上，保证负载不会太大，即减少切换</li>
<li>缓慢转移流量</li>
</ul>
<h4 id="准入控制"><a href="#准入控制" class="headerlink" title="准入控制"></a>准入控制</h4><p>广泛用于VC的拥塞预防<br>基本思想：如果建立新虚电路会导致拥塞，则拒绝<br>通过平均流量和瞬时流量判断是否有能力接受新VC，比如10Mbit&#x2F;s链路，按瞬时流量，只能建立1Mbit&#x2F;sVC，但这样会导致带宽利用率低，因此需要考虑平均流量</p>
<h4 id="流量调节"><a href="#流量调节" class="headerlink" title="流量调节"></a>流量调节</h4><p>通过调整发送方发送速率来消除拥塞<br>即某个网络结点感知到发生拥塞时，通知上游网络结点降低发送效率<br>需要解决的问题：</p>
<ul>
<li>如何感知拥塞：通过过去一段时间的平均排队延迟与瞬时排队延迟加权组合</li>
<li>如何把拥塞信息通知到上游结点：<ul>
<li>抑制分组：将某分组源地址作为目的地址，发送抑制分组，同时修改其一个标志位，避免被传输过程中，再次选择来发送抑制分组</li>
<li>背压：由于抑制分组传输时间可能较长，让抑制分组在每一跳都发挥抑制作用，直到源结点，拥塞缓解更快，但是需要中间设备有更大缓冲区</li>
</ul>
</li>
</ul>
<h4 id="负载脱落"><a href="#负载脱落" class="headerlink" title="负载脱落"></a>负载脱落</h4><p>清除拥塞<br>有选择的主动丢弃一些数据报<br>应该丢掉哪些：<br>序号较小的数据报更有价值，可以帮助发送窗口滑动<br>在视频应用丢弃序号更大的数据报</p>
<h2 id="Internet网络层"><a href="#Internet网络层" class="headerlink" title="Internet网络层"></a>Internet网络层</h2><p>一种数据报网络<br>主要包括</p>
<ul>
<li>网际协议IP</li>
<li>路由协议</li>
<li>互联网控制报文协议ICMP</li>
</ul>
<h3 id="IPv4"><a href="#IPv4" class="headerlink" title="IPv4"></a>IPv4</h3><p>最核心</p>
<h4 id="IP数据报分片"><a href="#IP数据报分片" class="headerlink" title="IP数据报分片"></a>IP数据报分片</h4><p>当路由器要将一个IP数据报转发至某个输出端口，而数据报总长超过链路的最大传输单元MTU，路由器将根据分片标志DF确定如何处理：</p>
<ul>
<li>DF&#x3D;0：进行分片</li>
<li>DF&#x3D;1：丢弃<br>路由器只负责分片，由目的主机的IP重组<br>重组过程：</li>
</ul>
<ol>
<li>根据分片首部的标识字判断是否属于同一IP数据报</li>
<li>通过分片字段MF&#x3D;1判断不是最后一个分片</li>
<li>根据分片的偏移字段判断先后顺序</li>
<li>结合数据报长度字段，判断是否缺少分片<br>相关计算公式见P146</li>
</ol>
<h3 id="IPv4编址"><a href="#IPv4编址" class="headerlink" title="IPv4编址"></a>IPv4编址</h3><p>一台主机可能有多个IP地址，如内外网<br>路由器每个接口都有一个IP地址</p>
<h4 id="IP子网"><a href="#IP子网" class="headerlink" title="IP子网"></a>IP子网</h4><p>早期为定长前缀，称为分类地址<br>IP地址&#x2F;24<br>其中&#x2F;24为子网掩码<br>前24位为前缀Prefix或网络部分NetID，描述归属的网络<br>另一部分为后缀Postfix或主机部分HostID，表示网络内唯一地址<br>现在主流为无类地址，前缀长度可变</p>
<h4 id="分类地址"><a href="#分类地址" class="headerlink" title="分类地址"></a>分类地址</h4><p>ABC分配给主机，路由器<br>D作为组播地址<br>E地址保留<br>ABC占总量87.5%</p>
<ul>
<li>A类：<ul>
<li>前缀8位：0xxxxxxx</li>
<li>首字节：0-127</li>
<li>总共有2^7个A类网络</li>
<li>IP地址总数：2^24</li>
</ul>
</li>
<li>B类：<ul>
<li>前缀16位：10（后跟14个x）</li>
<li>首字节：128-191</li>
<li>总共有2^14</li>
<li>IP地址总数：2^16</li>
</ul>
</li>
<li>C类：<ul>
<li>前缀24位：110（后跟21个x）</li>
<li>首字节：192-223</li>
<li>总共有2^21</li>
<li>IP地址总数：2^8</li>
</ul>
</li>
<li>D类：<ul>
<li>1110（后跟28个x）</li>
</ul>
</li>
<li>E类：<ul>
<li>1111（后跟28个x）</li>
</ul>
</li>
</ul>
<h4 id="特殊地址"><a href="#特殊地址" class="headerlink" title="特殊地址"></a>特殊地址</h4><ul>
<li>本地主机地址：<ul>
<li>0.0.0.0&#x2F;32：本网范围内表示本机</li>
<li>0.0.0.0&#x2F;0：用于路由表表示默认路由</li>
</ul>
</li>
<li>有限广播地址：<ul>
<li>255.255.255.255&#x2F;32：用于在子网中广播信息</li>
</ul>
</li>
<li>回送地址：<ul>
<li>127.0.0.0&#x2F;8：用于发送给源主机</li>
</ul>
</li>
<li>内网地址：<ul>
<li>A类：10.0.0.0&#x2F;8</li>
<li>B：172.16.0.0&#x2F;12</li>
<li>C：192.128.0.0&#x2F;16</li>
</ul>
</li>
</ul>
<h4 id="无类地址CIDR"><a href="#无类地址CIDR" class="headerlink" title="无类地址CIDR"></a>无类地址CIDR</h4><p>不存在网络类别<br>a.b.c.d&#x2F;x</p>
<h4 id="子网划分"><a href="#子网划分" class="headerlink" title="子网划分"></a>子网划分</h4><p>前缀越长，子网越小</p>
<ul>
<li>超网化：将较小子网，减少前缀，合并成较大的子网</li>
<li>子网化：超网化逆过程<br>子网掩码：32位，前缀长度的位数，全为1，其他位全为0</li>
<li>主机所在的子网地址：主机地址与子网掩码按位与运算</li>
<li>子网内广播地址：主机地址与子网掩码按位或运算</li>
<li>注意：可使用的ip地址数量-2，即广播地址与子网地址</li>
<li>例题见P151.152</li>
</ul>
<h4 id="路由聚合"><a href="#路由聚合" class="headerlink" title="路由聚合"></a>路由聚合</h4><p>路由器转发表原理：<br>将到达的IP数据报的目的IP地址与路由表的每项的子网掩码按位与运算，获得主机地址，再与路由表项的网络地址进行匹配<br>如果匹配成功的表项超过一条，则选择前缀最长的那个匹配项，即最长前缀匹配优先原则<br>如果没有匹配，则在默认路径转发<br>路由聚合：<br>将具有相同下一跳地址与接口，并且在一个大子网的多个路由表项合为一个<br>例题见P154</p>
<h4 id="动态主机配置协议DHCP"><a href="#动态主机配置协议DHCP" class="headerlink" title="动态主机配置协议DHCP"></a>动态主机配置协议DHCP</h4><p>组织被分配到网络地址块后，通过动态主机配置协议DHCP给组织内主机和路由器接口动态分配IP地址<br>DHCP在应用层实现，传输层UDP<br>工作流程：</p>
<ol>
<li>运行DHCP服务器，端口号67</li>
<li>新接入的主机运行DHCP客户，端口号68</li>
<li>客户向67端口发送DHCP发现Discover报文，以找到DHCP服务器<ul>
<li>目的IP地址255.255.255.255</li>
<li>源IP地址0.0.0.0</li>
</ul>
</li>
<li>服务器收到DHCP发现报文后，发送DHCP提供Offer报文<ul>
<li>目的IP同上</li>
<li>包含了分配的<ul>
<li>ip地址</li>
<li>子网掩码</li>
<li>默认网关</li>
<li>本地域名服务器ip地址</li>
</ul>
</li>
</ul>
</li>
<li>主机收到提供报文后，发送DHCP请求Request报文<ul>
<li>目的ip同上</li>
<li>可能会收到多个服务器的提供报文，选择其中一个作为自己ip地址</li>
<li>广播通知所有服务器，告知使用或未使用</li>
</ul>
</li>
<li>被选定的服务器发送DHCP确认ACK</li>
</ol>
<h3 id="网络地址转换NAT"><a href="#网络地址转换NAT" class="headerlink" title="网络地址转换NAT"></a>网络地址转换NAT</h3><p>用于缓解IPv4地址耗尽<br>运行在在私有网络的边缘路由器<br>同时连接内部私有网络和公共互联网<br>从私有网络出去的数据报会记录替换关系在NAT转换表<br>通过查询NAT转换表，替换进私有网络的IP数据报的IP地址与端口号，实现私有网络中的主机与公共网络通信</p>
<h4 id="NAT穿透技术"><a href="#NAT穿透技术" class="headerlink" title="NAT穿透技术"></a>NAT穿透技术</h4><p>由于NAT不能接受外网主机主动发起的通信，即对内网屏蔽<br>引入NAT穿透技术：<br>在NAT转换表建立内网到外网的映射，使内网服务以公网地址的身份暴露出去<br>如何建立：</p>
<ul>
<li>静态NAT配置：人工配置</li>
<li>动态：内网主机主动发现NAT，请求NAT完成配置，比较典型的是UPnP协议</li>
</ul>
<h3 id="互联网控制报文协议ICMP"><a href="#互联网控制报文协议ICMP" class="headerlink" title="互联网控制报文协议ICMP"></a>互联网控制报文协议ICMP</h3><p>IP的一部分<br>用于在主机和路由器间实现差错信息报告与可达性（ping）等网络探询<br>也就是两类报文类型<br>包括两个字段</p>
<ul>
<li>type</li>
<li>code</li>
</ul>
<h3 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h3><p>去掉IPv4首部分片字段，经过MTU较小链路直接丢弃，并给源主机发送ICMP反馈分组太大</p>
<h4 id="IPv6地址"><a href="#IPv6地址" class="headerlink" title="IPv6地址"></a>IPv6地址</h4><ul>
<li>首部40字节</li>
<li>地址长度128位，由8组4位16进制数组成</li>
<li>连续多组全0用::代替，且只能代替一次</li>
<li>另一种形式：低32位写成IPv4形式</li>
<li>分为三种<ul>
<li>单播地址</li>
<li>组播：仅能作为目的地址，给一个组内广播</li>
<li>任播：同上，但只能给组内某个</li>
</ul>
</li>
</ul>
<h4 id="IPv4到IPv6迁移"><a href="#IPv4到IPv6迁移" class="headerlink" title="IPv4到IPv6迁移"></a>IPv4到IPv6迁移</h4><ul>
<li>双协议栈：<ul>
<li>结点同时支持双协议</li>
<li>通过DNS查询感知另一个结点提供什么服务</li>
</ul>
</li>
<li>隧道：<ul>
<li>解决路径上有不同这种，结点，转换协议信息丢失</li>
<li>如两头IPv6，则将整个IPv6数据报作为负载放入IPv4数据报中</li>
<li>该IPv4数据报源与目的地址为隧道头尾结点地址</li>
</ul>
</li>
</ul>
<h2 id="路由算法与路由协议"><a href="#路由算法与路由协议" class="headerlink" title="路由算法与路由协议"></a>路由算法与路由协议</h2><p>默认路由器：主机通过局域网直接相连的路由器<br>默认网关：默认路由器对应该主机的接口<br>将网络抽象为带权无向图G&#x3D;(N,E)</p>
<ul>
<li>N：结点的集合</li>
<li>E：边的集合</li>
<li>权值：链路的费用或距离<br>结点x,y之间的权值用c(x,y)表示，之间不存在边，则权值为♾️，如a-b-c则c(a,c)&#x3D;♾️<br>其路径为｛a,b,c｝<br>最佳路由即最短路径<br>路由选择算法分为：</li>
<li>全局式路由选择算法：每个路由器在计算路由时，获取完整网络拓扑信息，比如LS算法</li>
<li>分布式路由选择算法：结点只需获取与其相连的链路费用，以及邻结点告知的到达其他结点最短距离，比如DV算法</li>
</ul>
<h3 id="链路状态路由选择算法LS"><a href="#链路状态路由选择算法LS" class="headerlink" title="链路状态路由选择算法LS"></a>链路状态路由选择算法LS</h3><p>周期性收到其他路由器广播的链路状态分组，并存储进链路状态数据库，构建网络拓扑图<br>求最短路径经典算法Dijkstra算法：</p>
<ul>
<li>D(v)：源结点到目的结点v的当前路径距离</li>
<li>P(v)：路径上v的除源结点外前序结点</li>
<li>S：初始只有源结点，存储从源结点到该结点的最短路径结点集合<br>最短路径即求最小D(v)的结点集合<br>例题见P163</li>
</ul>
<h3 id="距离向量路由选择算法DV"><a href="#距离向量路由选择算法DV" class="headerlink" title="距离向量路由选择算法DV"></a>距离向量路由选择算法DV</h3><p>每个结点测得与所有邻居结点的距离，并与其到达每个目标结点的最短距离，以距离向量的形式交换给所有邻居结点<br>每个结点以此计算并更新到每个目标结点的最短距离，并将新的距离向量通告给所有邻居，直到不再改变<br>每个路由器异步计算<br>算法的基础是B-F方程：</p>
<ul>
<li>令dx(y)为x到y路径的最低费用</li>
<li>令v为x的邻居</li>
<li>则dx(y)等于最小的c(x,v)+dv(y)</li>
<li>Dx(y)：x的距离向量，结点x估计自己到y的最短距离</li>
<li>每次收到距离变化与距离向量，会重新计算，最后收敛于dx(y)</li>
<li>DV初始化距离向量</li>
<li>例题见P166<br>无穷计数问题：来回跑<br>解决方案：</li>
<li>毒性逆转：通过给v发送距离向量是，申明自己与目标结点距离♾️解决</li>
<li>定义最大跳数：超过则距离向量为无穷大</li>
</ul>
<h3 id="层次化路由选择"><a href="#层次化路由选择" class="headerlink" title="层次化路由选择"></a>层次化路由选择</h3><p>由于LS和DV算法大量交换网络信息，降低带宽，而且收敛慢，对于大规模网络不可用<br>层次化路由选择：</p>
<ul>
<li>将互联网划分成多个自治系统AS</li>
<li>每个AS运行相同的路由协议和选择算法<br>网关路由器：</li>
<li>与其他AS互连的路由器</li>
<li>其上运行自治系统间路由选择协议，用于交换可达性信息，如该AS可到哪些子网<br>AS内部只用确定到达网关路由器的最短路径<br>即分为两层：</li>
<li>自治系统内路由选择</li>
<li>自治系统间路由选择</li>
</ul>
<h3 id="Internet路由选择协议"><a href="#Internet路由选择协议" class="headerlink" title="Internet路由选择协议"></a>Internet路由选择协议</h3><p>层次化路由选择</p>
<ul>
<li>内部网关协议IGP<ul>
<li>路由信息协议RIP</li>
<li>开放最短路径优先协议OSPF</li>
</ul>
</li>
<li>外部网关协议EGP<ul>
<li>边界网关协议BGP</li>
</ul>
</li>
</ul>
<h4 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h4><p>应用于较小的AS<br>在 UDP 报文段中传输<br>基于DV算法<br>度量路径采用跳数<br>费用：源路由器和目的子网间经过的子网数，即路由器数量，也就是跳数<br>只能用于内径不超过15的AS内使用，即一个子网到另一个最多不超过15跳，16表示无穷大<br>最多25个子网<br>每个路由器都有转发表，转发表对比 DV 添加了下一跳信息 避免了无穷计数现象<br>会将转发表通过RIP 通告的形式交给所有邻居，邻居根据收到的 RIP通告更新转发表<br>例题见 P169</p>
<h4 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h4><p>应用于较大的AS<br>基于 LS 算法，即 Dijkstra 算法求最短路径<br>在 IP 数据报中传输<br>OSPF 权值可以是跳数也能是带宽<br>每台路由器周期性，或在链路费用发生变化时，向 AS 内所有路由器广播链路状态分组<br>一个 OSPF 自治系统可以配置成多个区域，各自独立运行 OSPF 算法<br>即路由器分为：</p>
<ul>
<li>区域边界路由器</li>
<li>主干路由器</li>
<li>AS 边界路由器</li>
</ul>
<h4 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h4><p>功能：</p>
<ul>
<li>从相邻AS获取可达性信息</li>
<li>向AS内部所有路由器传播某子网可达性信息</li>
<li>基于上面，决定到达某子网最佳理由<br>由应用层实现<br>传输层 TCP<br>运行于网关路由器<br>BGP会话：过 179 端口连接另一路由器，即 BGP 对等方，并发送 BGP 报文<br>AS 内部为 iBGP 会话，外部为 eBGP 会话<br>重要属性：</li>
<li>ASN：每个 AS 全局唯一的自治系统号</li>
<li>AS-PATH：到达指定前缀需要经过的 AS 路径</li>
<li>NEXT-HOP：开始 AS-PATH 的第一跳<br>规则：</li>
</ul>
<ol>
<li>查看 AS 网络管理员设置本地偏好值</li>
<li>若相同，选最短 AS-PATH</li>
<li>若相同，选最近 NEXT-HOP</li>
</ol>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第五章 数据链路层与局域网</title>
    <url>/%E7%AC%AC5%E7%AB%A0%20%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82%E4%B8%8E%E5%B1%80%E5%9F%9F%E7%BD%91/</url>
    <content><![CDATA[<p>网络层数据报封装在数据链路层帧中，在物理线路之上的逻辑数据通路中传送<br>典型硬件实体：网络适配器<br>结点：数据链路的端点<br>链路：结点间信道<br>提供的服务：</p>
<ul>
<li>组帧：<ul>
<li>帧头：发送与接收结点的地址信息</li>
<li>帧尾：差错编码</li>
<li>帧定界：在头和尾，用于识别帧的开始和结束</li>
</ul>
</li>
<li>链路接入：<ul>
<li>点对点链路：独占通信链路，控制简单</li>
<li>广播链路：通信链路被多个结点共享，彼此会干扰，因此必须运行媒介访问控制MAC协议，用于协调</li>
</ul>
</li>
<li>可靠交付：<ul>
<li>有线链路：没必要，所以不提供可靠传输服务</li>
<li>无线链路：参考传输层可靠传输方式</li>
</ul>
</li>
<li>差错控制：控制由信噪比等导致的误比特率高造成的影响</li>
</ul>
<h2 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h2><p>噪音分类：</p>
<ul>
<li>随机噪音：引起随机差错或独立差错</li>
<li>冲击噪音：突发差错<br>突发长度：突发错误第一位到最后一位长度</li>
</ul>
<h3 id="基本方式"><a href="#基本方式" class="headerlink" title="基本方式"></a>基本方式</h3><ul>
<li>检错重发：<ul>
<li>发送方对数据进行差错编码</li>
<li>接收方利用差错编码判断数据是否有错</li>
<li>有错则要求重发</li>
<li>例如等停协议，滑动窗口</li>
</ul>
</li>
<li>前向纠错 FEC：<ul>
<li>发送方对数据进行纠错编码</li>
<li>接收方通过纠错编码，定位错误位置并纠正</li>
<li>适用于单工链路与对实时性要求高应用</li>
</ul>
</li>
<li>反馈校验：<ul>
<li>接受端将数据原封不动发给发送方</li>
<li>原理简单，易于实现，不需要差错编码</li>
<li>传输效率差，实时性差</li>
</ul>
</li>
<li>检错丢弃：<ul>
<li>发现错误直接丢弃</li>
<li>适合实时性要求高的应用</li>
</ul>
</li>
<li>混合差错控制：<ul>
<li>检错重发与前向纠错结合</li>
</ul>
</li>
</ul>
<h3 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h3><p>香农信道编码定理：可以通过编码使数据传输过程不发生错误<br>差错编码基本原理：待传输的数据加上冗余信息，接收端检测冗余信息与原数据关系是否存在<br>比如发送 01 时将数据变为 0101，但这个方式无法实现纠错</p>
<h3 id="检错与纠错"><a href="#检错与纠错" class="headerlink" title="检错与纠错"></a>检错与纠错</h3><p>汉明距离 dc ：两个等长码之间，对应位不同的数量<br>编码集的汉明距离 ds：其中任意两个编码汉明距离最小值</p>
<ul>
<li>对于检错编码：<ul>
<li>如果 ds&#x3D;r+1 ，则可以检测 r 位差错</li>
</ul>
</li>
<li>对于纠错编码：<ul>
<li>如果 ds&#x3D;2r+1，则可以纠正 r 位差错</li>
<li>发生错误时恢复成距离最近的正确编码</li>
</ul>
</li>
<li>例题见 P180</li>
</ul>
<h3 id="典型差错编码"><a href="#典型差错编码" class="headerlink" title="典型差错编码"></a>典型差错编码</h3><p>异或运算 XOR：</p>
<ul>
<li>符号为圈中加号</li>
<li>相同为 0 否则 1</li>
<li>相当于加法没进位</li>
</ul>
<h4 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h4><ul>
<li>1 位冗余信息，放在 a0，使 1 的位数为奇数（偶数）</li>
<li>即满足各位 XOR 结果为 1（0）<ul>
<li>其中式子为<strong>监督关系式</strong></li>
<li>结果为<strong>校正因子 S</strong></li>
</ul>
</li>
<li>50% 检错率</li>
<li>编码简单，开销小</li>
<li>用于低速串行链路</li>
</ul>
<h4 id="汉明码"><a href="#汉明码" class="headerlink" title="汉明码"></a>汉明码</h4><p>当信息足够长时编码效率高</p>
<h5 id="纠错原理"><a href="#纠错原理" class="headerlink" title="纠错原理"></a>纠错原理</h5><p>在<strong>k 位信息位</strong>增加<strong>r 位冗余位</strong>，得到<strong>码字长度n</strong>为k+r，以增加<strong>r 个</strong>校正因子与监督关系式<br>如有两个校正因子，比如 10，则有四种情况，其中一种表明正确，其余三种可以指明出错的位置<br>为实现纠错，要求：<br>2^r &gt;&#x3D; n+1<br>因此 k 越大，编码效率越高<br><strong>缺点：</strong> 只能纠正一位错误<br>例题见 P181</p>
<h4 id="循环冗余码CRC"><a href="#循环冗余码CRC" class="headerlink" title="循环冗余码CRC"></a>循环冗余码CRC</h4><p>在现代网络数据链路层广泛使用于检错，也称为多项式编码<br>将二进制串看成多项式<br>如：100101 看成 x^5+x^2+1<br>发送方与接收方商定一个多项式 G(x)，其中最高最低位必须是 1，长度必须比数据帧短<br>在帧的尾部附加一个校验和使帧对应的多项式 M（x)能被 G(x)除尽，如果结果为 0 则没出错<br>例题见 P183</p>
<h5 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h5><ul>
<li>检错能力强：能 100% 检查出 16 位以下错误</li>
<li>编码效率高：冗余位与数据位数无关，信息位长时，开销很小</li>
</ul>
<h2 id="多路访问控制协议MAC"><a href="#多路访问控制协议MAC" class="headerlink" title="多路访问控制协议MAC"></a>多路访问控制协议MAC</h2><p>对于广播通信方式，信道上有很多结点，需要 MAC 协议来协调结点的数据发送<br>主要分为 3 种</p>
<h3 id="信道划分MAC"><a href="#信道划分MAC" class="headerlink" title="信道划分MAC"></a>信道划分MAC</h3><p>通过<strong>多路复用技术</strong>，将信道划分并分配给不同结点，各结点只使用被分配的资源</p>
<h4 id="频分多路复用FDM"><a href="#频分多路复用FDM" class="headerlink" title="频分多路复用FDM"></a>频分多路复用FDM</h4><p>对应的多路复用 MAC 协议为后方加 A，即 <strong>FDMA</strong>，下同<br>常用于模拟传输的宽带网络<br>将信号调制到互不重叠的频带上<br>往往每路语音信号占4kHz，其中 3.1kHz 为语音频带，两侧各留 0.45kHz保护频带</p>
<ul>
<li>优点：分路方便，在模拟通信领域应用广泛</li>
<li>缺点：<ul>
<li>串扰：各路信号之间相互干扰</li>
<li>所需设备随输入路数增大而增多，不易小量化</li>
<li>不提供差错控制</li>
</ul>
</li>
</ul>
<h4 id="时分多路复用TDM"><a href="#时分多路复用TDM" class="headerlink" title="时分多路复用TDM"></a>时分多路复用TDM</h4><p>将信号在时域内划分为多个等长时隙，每路信号占用不同时隙，实现信道共享</p>
<ul>
<li><strong>同步时分多路复用 STDM</strong><ul>
<li>按固定顺序，把时隙分配给n路信号</li>
<li>发送端以 n 为周期，将 n 路信号的采样构成一个时分复用帧</li>
<li>接收端采样严格同步的时隙分割方式，完成分离与还原</li>
<li>缺点：可能出现空闲时隙，造成信道资源浪费</li>
</ul>
</li>
<li><strong>异步时分多路复用ATDM</strong><ul>
<li>也称为<strong>统计时分多路复用 STDM</strong></li>
<li>给数据量大的用户分配较多时隙，数据量小…</li>
<li>给每个时隙加上用户的标识</li>
<li>主要用于高速远程传播，即广域网</li>
<li>缺点：<ul>
<li>技术复杂性高</li>
<li>信道共享冲突问题</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="波分多路复用WDM"><a href="#波分多路复用WDM" class="headerlink" title="波分多路复用WDM"></a>波分多路复用WDM</h4><p>用于光纤通信<br>通常用光的波长来代替频率讨论<br>在一根光纤中，传输多路不同波长的光信号<br>长距离传输需要光纤放大器 EDFA，两个之间 120km</p>
<h5 id="密集波分复用-DWDM："><a href="#密集波分复用-DWDM：" class="headerlink" title="密集波分复用 DWDM："></a>密集波分复用 DWDM：</h5><ul>
<li>波长划分更密集，复用度更高，信道利用率更高</li>
<li>关键技术：光放大器</li>
<li>现代光纤通信网络的重要基础</li>
</ul>
<h4 id="码分多路复用CDM"><a href="#码分多路复用CDM" class="headerlink" title="码分多路复用CDM"></a>码分多路复用CDM</h4><p>扩频技术：利用更长的互相正交的码组分别编码原始信息，实现信道共享<br>两码组 X 和 Y 相互正交充分必要条件即 p(X,Y) &#x3D; 0<br>例题见 P189</p>
<h3 id="随机访问MAC协议"><a href="#随机访问MAC协议" class="headerlink" title="随机访问MAC协议"></a>随机访问MAC协议</h3><p>争用接入：所有用户随机地向信道上发送信息，胜利者暂时占用信道<br>如果同时一个以上用户在信道上发送信息，则产生<strong>冲突</strong>，发送失败，每个用户随机退让一段时间，再次尝试</p>
<h4 id="ALOHA协议"><a href="#ALOHA协议" class="headerlink" title="ALOHA协议"></a>ALOHA协议</h4><p>最早最基本的无线数据通信协议<br>通信站点随机接入共享信道（天空），频率相同，任意两个同频率广播帧都会使双方失效<br><strong>根本缺点：</strong> 发送前不判断信道是否空闲</p>
<h5 id="纯ALOHA"><a href="#纯ALOHA" class="headerlink" title="纯ALOHA"></a>纯ALOHA</h5><p>发送站发出后侦听一段时间，等待应答信号，未收到则等待一个随机时间后再次发送<br>性能：</p>
<ul>
<li>吞吐率 S：在一帧的发送时间 T0 内成功发送的平均帧数，0&lt;S&lt;1</li>
<li>信道利用率：S 接近 1 的程度</li>
<li>网络负载 G：T0 内发送的平均帧数，无论是否成功</li>
<li>S &#x3D; Ge^-2G</li>
<li>G &#x3D; 0.5 时,S最高</li>
</ul>
<h5 id="时隙ALOHA"><a href="#时隙ALOHA" class="headerlink" title="时隙ALOHA"></a>时隙ALOHA</h5><p>需要所有通信站在时间上同步<br>把信道时间分成离散的时隙 Slot<br>每个时隙为发送一帧所需时间<br>在时隙开始时发送<br>如果出现冲突，下一时隙概率 P 重发<br>性能：</p>
<ul>
<li>S &#x3D; Ge^-G</li>
<li>G &#x3D; 1时 S 最大</li>
<li>冲突危险区为纯的一半</li>
<li>冲突概率低</li>
</ul>
<h4 id="载波监听多路访问协议"><a href="#载波监听多路访问协议" class="headerlink" title="载波监听多路访问协议"></a>载波监听多路访问协议</h4><p>先听后说：发送数据前，监听信道上其他站点是否在发送</p>
<h5 id="非坚持CSMA"><a href="#非坚持CSMA" class="headerlink" title="非坚持CSMA"></a>非坚持CSMA</h5><p>若发现信道忙，等待一个随机时间，然后重新开始侦听</p>
<ul>
<li>优点：减少了冲突概率</li>
<li>缺点：信道空闲时间长，发送延迟大，容易被捷足先登</li>
</ul>
<h5 id="1-坚持CSMA"><a href="#1-坚持CSMA" class="headerlink" title="1-坚持CSMA"></a>1-坚持CSMA</h5><p>若发现信道忙，继续侦听，直至发现空闲</p>
<ul>
<li>优点：减少了信道空闲时间</li>
<li>缺点：可能多个站点同时侦听，导致冲突概率大</li>
</ul>
<h5 id="P-坚持CMSA"><a href="#P-坚持CMSA" class="headerlink" title="P-坚持CMSA"></a>P-坚持CMSA</h5><p>坚持监听，发现空闲后，以概率 P在下一时隙侦听并发送数据</p>
<h4 id="带冲突检测的载波监听多路访问协议"><a href="#带冲突检测的载波监听多路访问协议" class="headerlink" title="带冲突检测的载波监听多路访问协议"></a>带冲突检测的载波监听多路访问协议</h4><p><strong>CSMA&#x2F;CD</strong> 其中 CD 标识冲突检测，用于在发送数据的同时监听信道，发生冲突，立即停止发送，发出<strong>冲突强化信号</strong>，使所有通信站知道冲突发生，并等待随机时间，停止发送，避免冲突后继续发送导致<strong>信道资源浪费</strong><br>即：<strong>先听后说，边听边说，不说不听</strong><br>工作状态：</p>
<ul>
<li>传输状态</li>
<li>竞争状态</li>
<li>空闲状态<br>由于传播时延，仍然会产生冲突<br>由于需要检测信号强度判断冲突，只适用于有线信道<br>要使用 CSMA&#x2F;CD，需要满足的物理要求，公式与例题见 P194</li>
</ul>
<h3 id="受控接入-MAC-协议"><a href="#受控接入-MAC-协议" class="headerlink" title="受控接入 MAC 协议"></a>受控接入 MAC 协议</h3><p>各个用户必须服从控制才能接入信道</p>
<h4 id="集中式控制"><a href="#集中式控制" class="headerlink" title="集中式控制"></a>集中式控制</h4><p>一个主机通过<strong>轮询技术</strong>调度其他通信站接入信道<br><strong>轮叫轮询：</strong> </p>
<ul>
<li>按顺序逐个轮询</li>
<li>有数据则发给主机</li>
<li>缺点：轮询过程不停循环，开销较大<br><strong>传递轮询：</strong><br>每台主机两条输入线</li>
<li>接收主机发来的消息</li>
<li>接收允许发送数据的控制信息<br>当 N 向主机发送数据时，其他站可以检测到线路上有数据在发送<br>N 无信息或者发送完毕，将 N-1站地址给主机<br>缺点：主机出问题，全网瘫痪</li>
</ul>
<h4 id="分散式控制"><a href="#分散式控制" class="headerlink" title="分散式控制"></a>分散式控制</h4><p>现代网络主要是用的方法<br><strong>令牌Token：</strong> 通信站使用通信的许可，在信道空闲时在信道传输，通信站获取令牌后可以在一定时间内发送数据，发送完毕重新将令牌发送到信道上<br>令牌标志位 1：有站点正在占用<br><strong>令牌环</strong>主要操作过程：</p>
<ol>
<li>网络空闲时，令牌在环路绕行，标志位为 0</li>
<li>某站点等待并获取令牌，标志位置为1</li>
<li>每个站点边转发边检测数据帧目的地址，接收发给自己的</li>
<li>数据帧绕环一周后，发送站将其撤销，即自生自灭，并作差错检验</li>
<li>重新产生令牌<br>最严重两种错误：</li>
</ol>
<ul>
<li>设立<strong>主动令牌管理站</strong></li>
<li>令牌丢失：设置超时时间，超过则由<strong>主动令牌管理站</strong>清理数据碎片，重发令牌</li>
<li>数据帧无法撤销：第一次经过<strong>主动令牌管理站</strong>会将监控位置为 1，发现有 1 的则清理数据碎片，重发令牌</li>
</ul>
<h2 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h2><p>主要是星型拓扑和树型<br>TCP&#x2F;IP 体系结构的网络局域网是以太网<br>网络适配器上运行介质访问控制MAC协议 </p>
<h3 id="数据链路层寻址"><a href="#数据链路层寻址" class="headerlink" title="数据链路层寻址"></a>数据链路层寻址</h3><h4 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h4><p>实现网络层地址（IP 地址）与链路层地址映射的地址解析协议</p>
<h4 id="链路层地址与MAC"><a href="#链路层地址与MAC" class="headerlink" title="链路层地址与MAC"></a>链路层地址与MAC</h4><p>主机或路由器的<strong>链路层地址</strong>来自其网络适配器（网卡）<br>每个网络接口对应一个<br>适配器的 MAC 地址无论到哪都不会改变，类似于身份证<br>而 IP 地址会随进入不同子网而变化，类似于邮政地址<br>也称为：</p>
<ul>
<li>MAC 地址</li>
<li>物理地址</li>
<li>局域网地址<br><strong>注意：</strong> 链路层交换机的接口没有 MAC 地址，交换机只透明地实现路由器与主机间的链路层帧转发<br>特点：</li>
<li>长度 6 字节</li>
<li>第一个字节的倒数第二位为 G&#x2F;L 位<ul>
<li>0：Global，全球管理，全球唯一</li>
<li>1：Local，本地管理，由用户自行分配</li>
<li>以太网不理会 G&#x2F;L 位</li>
</ul>
</li>
<li>16 进制表示</li>
<li>使用：或-连接</li>
<li>最初网卡的 MAC 地址不变</li>
<li>现在可以更改，但是在局域网内唯一</li>
<li>广播帧 MAC 地址：FF:FF:FF:FF:FF:FF</li>
</ul>
<h4 id="地址解析协议ARP"><a href="#地址解析协议ARP" class="headerlink" title="地址解析协议ARP"></a>地址解析协议ARP</h4><p>在所在子网内，根据 IP 地址获取 MAC 地址<br>在每台主机和路由器维护一个 APR 表，存储其他主机或路由器 IP 与 MAC 映射关系<br>每个映射设置一个寿命值 TTL 指示删除时间<br>ARP 表找不到映射时，广播询问局域网内所有主机和路由器<br>ARP 与 DNS 区别</p>
<ul>
<li>解析内容不同</li>
<li>解析范围不同</li>
<li>实现机制不同</li>
</ul>
<h3 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h3><p>最流行有线局域网技术<br>IEEE 802.3以以太网为基础<br>本书中这两个词等价<br>无连接不可靠服务，直接丢弃检查出错的 MAC 帧，无差错控制，由上层协议（TCP等）实现差错控制</p>
<ul>
<li>经典以太网：采用同轴电缆连接</li>
<li>总线型以太网 10Base-5:<ul>
<li>速率：10Mbit&#x2F;s</li>
<li>最短帧长 64 字节</li>
<li>一个冲突域中最多 5 个网段，每个最长 500m</li>
<li>网段之间有中继器</li>
<li>MAC协议采用 CSMA&#x2F;CD</li>
</ul>
</li>
<li>10Base-T<ul>
<li>采用非屏蔽双绞线 UTP</li>
<li>速率：10Mbit&#x2F;s</li>
<li>连接到物理层集线器（几乎不再使用），集线器与集线器也能互连</li>
<li>组网方便，故障隔离</li>
</ul>
</li>
<li>快速以太网100Base-T：<ul>
<li>UTP 或光缆（100Base-FX）</li>
<li>CSMA&#x2F;CD</li>
<li>100Mbit&#x2F;s</li>
</ul>
</li>
<li>千兆以太网<ul>
<li>CSMA&#x2F;CD</li>
<li>1000Mbit&#x2F;s</li>
</ul>
</li>
<li>万兆以太网<br>冲突域：在一个局域网内，多个结点往物理介质中发送信号，发生冲突导致发送失败，则这几个结点在一个冲突域<br>广播域：接受得到互相广播帧的结点在一个广播域</li>
</ul>
<h3 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h3><p>网桥：</p>
<ul>
<li>先检查接收到帧的目的 IP 地址，再确定转发到哪个端口</li>
<li>只适用于用通信量不大的局域网</li>
<li>否则因为广播风暴产生拥塞</li>
<li>对于结点透明<br>交换机：</li>
<li>原理：多端口网桥</li>
<li>基本工作方式：存储转发</li>
<li>有多种速率端口</li>
<li>端口工作方式：<ul>
<li><strong>混杂模式：</strong> 默认使用，无论帧 MAC 地址，都会接收，有差错控制</li>
<li>直通交换：部分使用，接受到帧的第 6 个字节，就根据目的 MAC 地址转发，不差错控制</li>
</ul>
</li>
</ul>
<p>当一帧到达，以帧的目的 MAC地址为主键查询内部交换表</p>
<ul>
<li>如果交换表内有对应项：<ul>
<li>对应端口与接收到该帧的端口相同：丢弃</li>
<li>否则按查表结果转发</li>
</ul>
</li>
<li>没对应项：泛洪：向除了接收到该帧的端口外所有其他端口转发</li>
</ul>
<p>交换表由<strong>自学习</strong>构建：只在接收信息时记录来源端口与 源MAC 地址，无目的 MAC 地址对应表项则泛洪，每个表项存在有效时间<br>以此实现即插即用<br>通过生成树协议，即无环路，避免兜圈</p>
<p>交换机优点：</p>
<ul>
<li>消除冲突</li>
<li>支持异质链路</li>
<li>易于网络管理</li>
</ul>
<h4 id="以太网络"><a href="#以太网络" class="headerlink" title="以太网络"></a>以太网络</h4><p>交换以太网：</p>
<ul>
<li>使用交换机代替集线器</li>
<li>交换机连接的主机不再属于同一个冲突域，一个冲突域只有一台主机，不会发生传统的冲突</li>
<li>通信时独占带宽，如 10 个用户，则总容量相当于翻了十倍<br>传统共享式以太网：</li>
<li>不使用交换机</li>
<li>多个用户平均分配带宽，如 10 个用户，则每人带宽为 10 分之一</li>
</ul>
<h3 id="虚拟局域网-VLAN"><a href="#虚拟局域网-VLAN" class="headerlink" title="虚拟局域网 VLAN"></a>虚拟局域网 VLAN</h3><p>如果广播域太大，广播帧会被大量复制，导致广播风暴<br>需要尽可能限定广播域规模<br>基本手段：利用路由器分割广播域<br>VLAN：</p>
<ul>
<li>另一种分割广播域手段</li>
<li>设置在交换机上</li>
<li>软件的方式划分局域网中的工作组，以限制接收到广播的主机数<br>三种方式：</li>
<li>基于交换机端口划分</li>
<li>基于 MAC 地址划分</li>
<li>基于上层协议类型或地址划分：有利于基于应用划分</li>
</ul>
<h2 id="点对点链路协议"><a href="#点对点链路协议" class="headerlink" title="点对点链路协议"></a>点对点链路协议</h2><p>MAC 协议都用于共享链路<br>点对点链路用于广域网，不存在介质共享，所以不需要 MAC 协议</p>
<h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><p>使用最多<br>定界符： 在首尾，7E,即01111110<br>为实现透明传输：如果数据中含有相同的，在数据之后加上转义字节 01111101，如：0111111001111101</p>
<h3 id="高级数据链路控制HDLC"><a href="#高级数据链路控制HDLC" class="headerlink" title="高级数据链路控制HDLC"></a>高级数据链路控制HDLC</h3><p>应用于点对点和点对多链路<br>定界符同上<br>为实现透明传输： 位填充：每发现 5 个连续的 1 就插入一个 0，如：01111110 -&gt; 011111010</p>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第六章 物理层</title>
    <url>/%E7%AC%AC6%E7%AB%A0%20%E7%89%A9%E7%90%86%E5%B1%82/</url>
    <content><![CDATA[<h2 id="数据通信系统"><a href="#数据通信系统" class="headerlink" title="数据通信系统"></a>数据通信系统</h2><p>通信系统：实现信息传输的一切技术设备和传输介质</p>
<ul>
<li>信源：将消息转换为信号</li>
<li>发送设备：通过编码和调制变换信号</li>
<li>信道</li>
<li>噪声</li>
<li>接收设备：通过译码和解调还原信号</li>
<li>信宿：信号转换为信息</li>
</ul>
<h3 id="模拟通信与数字通信"><a href="#模拟通信与数字通信" class="headerlink" title="模拟通信与数字通信"></a>模拟通信与数字通信</h3><p>数字通信使用得更多<br>互相之间可以转换<br>模拟信号-&gt;数字信号：采样，量化，编码<br>反过来：解码，平滑</p>
<h3 id="数据通信方式"><a href="#数据通信方式" class="headerlink" title="数据通信方式"></a>数据通信方式</h3><ul>
<li>单向通信：单工</li>
<li>双向交替通信：半双工</li>
<li>双向同时通信：全双工</li>
</ul>
<p>计算机内部部件间：</p>
<ul>
<li>并行通信：为一个字节的每一位设置一个传输通道，同时传送，速度快，造价高，不适合长距离，一般用于计算机内部元器件之间</li>
<li>串行通信：每一位依次传输，设备开销小，速度慢，用于鼠标键盘</li>
</ul>
<p>同步技术：收发方动作统一，步调一致<br>异步式同步：</p>
<ul>
<li>一次传输一个字符</li>
<li>每个字符设置起始位和停止位</li>
<li>无字符发送时，一直发停止位</li>
<li>实现简单</li>
<li>传输效率低，</li>
<li>适合低速数据传输<br>同步式同步：</li>
<li>一次传输一个数据块</li>
<li>同样设置起始位和停止位</li>
<li>效率高，开销小</li>
<li>需要建立同步时钟，控制复杂</li>
<li>适合高度数据传输</li>
</ul>
<h2 id="物理介质"><a href="#物理介质" class="headerlink" title="物理介质"></a>物理介质</h2><h3 id="引导型传输介质"><a href="#引导型传输介质" class="headerlink" title="引导型传输介质"></a>引导型传输介质</h3><p>即有线信道</p>
<ul>
<li>架空明线<ul>
<li>长距离150kHz，短距离 300</li>
<li>优点：传输损耗低</li>
<li>缺点：对外界噪声敏感，带宽有限</li>
<li>已被淘汰</li>
</ul>
</li>
<li>双绞线<ul>
<li>屏蔽双绞线 STP<ul>
<li>性能好</li>
<li>价格高，工艺复杂</li>
</ul>
</li>
<li>非……UTP<ul>
<li>主要使用</li>
</ul>
</li>
<li>衰落随频率升高而增大，因此需要大振幅</li>
<li>用于基带传输</li>
</ul>
</li>
<li>同轴电缆<ul>
<li>外导体接地，屏蔽外界干扰</li>
<li>主要用于有线电视网络</li>
<li>其他场景已被双绞线替代</li>
</ul>
</li>
<li>光纤<ul>
<li>利用光的全反射</li>
<li>优点：<ul>
<li>信道容量大</li>
<li>传输损耗小</li>
<li>抗电磁干扰</li>
<li>保密性好，不容易窃听</li>
<li>体积小，重量轻</li>
</ul>
</li>
<li>发送与接收设备为：光调制器和光检测器</li>
</ul>
</li>
</ul>
<h3 id="非引导型传输介质"><a href="#非引导型传输介质" class="headerlink" title="非引导型传输介质"></a>非引导型传输介质</h3><p>无线信道</p>
<ul>
<li>地波传播：沿地球表面传播，数百米</li>
<li>天波传播：利用大气电离层发射，4000km</li>
<li>视线传播：<ul>
<li>频率更高的电磁波穿透电离层，无法反射</li>
<li>采用视线无障碍点对点直线传播，即利用卫星中继站和地面中继站</li>
<li>理论上 3 颗卫星作为转发站，就能覆盖全球</li>
</ul>
</li>
<li>声波传播：水下电磁波损耗较大，因此使用水声信道</li>
</ul>
<h2 id="信道"><a href="#信道" class="headerlink" title="信道"></a>信道</h2><p>狭义信道：传输介质<br>此处信道为<strong>广义信道</strong>：</p>
<ul>
<li>包括狭义信道与相关设备</li>
<li>划分为：<ul>
<li>编码信道<ul>
<li>生成数字信号</li>
<li>位于编码器与译码器之间，调制器与解调器之外</li>
</ul>
</li>
<li>调制信道<ul>
<li>生成模拟信号</li>
<li>根据信号畸变是否与时间有关分为<ul>
<li>随机参数信道</li>
<li>恒定参数信道</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>又划分为：<ul>
<li>连续信道：模拟信号</li>
<li>离散信道：数字信号</li>
</ul>
</li>
</ul>
<h3 id="信道容量"><a href="#信道容量" class="headerlink" title="信道容量"></a>信道容量</h3><p>信道无差错传输信息的最大平均速率</p>
<h4 id="连续信道容量"><a href="#连续信道容量" class="headerlink" title="连续信道容量"></a>连续信道容量</h4><p>对于无噪音的基带传输，最大频带利用率为 2Baud&#x2F;Hz，即每赫兹来回一次</p>
<ul>
<li><strong>奈奎斯特公式：</strong><ul>
<li>用于计算理想信道容量C，单位为 bit&#x2F;s</li>
<li>传输 M 进制基带信号</li>
<li>带宽 B ，单位 Hz</li>
<li>C &#x3D;2Blog2M</li>
</ul>
</li>
<li><strong>香农公式：</strong><ul>
<li>有噪声连续信道容量C</li>
<li>输入信号功率 S</li>
<li>噪声功率 N</li>
<li>信噪比 S&#x2F;N，<ul>
<li>单位分贝 dB</li>
<li>（S&#x2F;N）dB 的值为 10 * 功率的比值的 0 的数量，如 100 就是 20dB</li>
</ul>
</li>
<li>C &#x3D; Blog(1+S&#x2F;N)，注意，此处为功率之比</li>
<li>例题见 P225</li>
</ul>
</li>
</ul>
<h2 id="基带传输"><a href="#基带传输" class="headerlink" title="基带传输"></a>基带传输</h2><p>模拟（数字）信源发出模拟（数字）基带信号<br>通过信源编码可以将模拟基带信号转换为数字基带信号<br>数字信号在数字通信系统中传输有两种方式：</p>
<ul>
<li>基带传输：<ul>
<li>直接在信道中传送基带信号</li>
<li>适合在低通特性（允许低频信号通过）的有线信道中传输</li>
</ul>
</li>
<li>频带传输</li>
</ul>
<h3 id="数字基带传输编码"><a href="#数字基带传输编码" class="headerlink" title="数字基带传输编码"></a>数字基带传输编码</h3><p>利用脉冲信号的幅值编码<br>具体图片见 P226</p>
<h3 id="频带传输"><a href="#频带传输" class="headerlink" title="频带传输"></a>频带传输</h3><p>基带信号具有低通特性</p>
<ul>
<li>模拟调制：利用数字基带信号调制载波</li>
<li>数字调制</li>
</ul>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第七章 无线与移动网络</title>
    <url>/%E7%AC%AC7%E7%AB%A0%20%E6%97%A0%E7%BA%BF%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%BD%91%E7%BB%9C/</url>
    <content><![CDATA[<p>基础设施模式：无线主机通过基站（接入点 AP）实现中继<br>自组织网络（特定网络）：不通过基站<br>切换：移动主机在走出一个基站覆盖范围后，接入到达的范围对应的基站</p>
<h2 id="无线链路"><a href="#无线链路" class="headerlink" title="无线链路"></a>无线链路</h2><p>有线无线网络主要区别在数据链路层（IEEE802.11 无线局域网，无线网卡，接入点）与物理层<br>网络层以上无任何区别<br>主要表现在：</p>
<ul>
<li>信号强度衰减</li>
<li>同信号频段电波源互相干扰</li>
<li>多径传播<br>显然更容易出现差错，因此除了 CRC 还有链路层 ARQ 协议来重传受损的帧<br>隐藏终端问题：如果 A 和 C 互相检测不到，而同时向 B 发送数据，会发生<strong>碰撞</strong> 以至于 B 接收不到任何数据</li>
</ul>
<h2 id="移动网络"><a href="#移动网络" class="headerlink" title="移动网络"></a>移动网络</h2><h3 id="移动性"><a href="#移动性" class="headerlink" title="移动性"></a>移动性</h3><p>如果在一个无线接入网内移动，但切换了切换了接入点（如无线路由器）那么：</p>
<ul>
<li>对于网络层，他没有移动</li>
<li>对于数据链路层，移动了</li>
</ul>
<h3 id="保持IP-地址不变的重要性"><a href="#保持IP-地址不变的重要性" class="headerlink" title="保持IP 地址不变的重要性"></a>保持IP 地址不变的重要性</h3><p>电话号码本质上是网络层地址<br>只要网络层地址不变，对于应用，移动就是透明的，便于在移动中保持连接<br>对于 C&#x2F;S 应用（不包吃不间断连接），固定 IP 地址不是那么重要</p>
<h3 id="基础设施"><a href="#基础设施" class="headerlink" title="基础设施"></a>基础设施</h3><ul>
<li>归属网络home network：移动结点的永久居所</li>
<li>归属代理home agent：归属网络中代表移动结点执行移动管理的实体</li>
<li>外部网络（被访网络）：移动结点当前所在的非归属网络</li>
<li>外部代理</li>
<li>通信者：希望与该移动节点通信的实体</li>
</ul>
<h3 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h3><p>为了使用户移动对网络应用透明，希望移动结点保持地址不变<br>当移动结点位于外部网络，所有访问此结点的流量导向外部网络，两种方式保持网络层地址不变</p>
<ul>
<li>利用路由选择信息交换，实现向其他所有网络发出通告，告诉他们该移动结点在它网络中，并有一条路径可讲数据导向该移动结点永久地址<ul>
<li>扩展性不好，不适合用于大型网络</li>
</ul>
</li>
<li>将移动性从网络核心搬到网络边缘，由移动结点归属网实现，归属代理跟踪该接点的外部网络<ul>
<li>外部代理给移动结点创建一个内网转交地址（外部地址） COA，移动结点与两个地址相关：永久地址和 COA</li>
<li>外部代理告诉归属代理该接点拥有此 COA</li>
<li>COA 通过外部代理将数据重新路由选择到移动结点</li>
</ul>
</li>
</ul>
<h3 id="路由选择"><a href="#路由选择" class="headerlink" title="路由选择"></a>路由选择</h3><h4 id="间接路由选择"><a href="#间接路由选择" class="headerlink" title="间接路由选择"></a>间接路由选择</h4><ol>
<li>通信者将数据报寻址到移动结点永久地址，移动性对通信者透明</li>
<li>归属代理截获这些数据报，封装成更大的数据报，通过移动节点的 COA，转发给外部代理</li>
<li>外部代拆封成原始数据报，理转发给移动结点</li>
<li>移动结点可以直接寻址到通信者<br>低效：因为三角路由选择</li>
</ol>
<h4 id="直接路由选择"><a href="#直接路由选择" class="headerlink" title="直接路由选择"></a>直接路由选择</h4><p>增加复杂度，解决三角路由低效问题</p>
<ul>
<li>通信者所在网络有一个<strong>通信者代理</strong></li>
<li>通信者代理向归属网络代理获取移动结点的 COA</li>
<li>通信者代理通过<strong>隧道技术</strong>发往移动结点 COA<br>两个重要问题：</li>
<li>需要移动用户定位协议，从归属代理获取移动结点 COA</li>
<li>如果移动结点移动到另一个外部网络，更新通信者代理中的 COA，两种方法<ul>
<li>建立新的协议告知通信者代理变化</li>
<li>将移动结点的外部代理标识为<strong>锚外部代理</strong><ul>
<li>移动结点在新的外部代理注册后，新外部代理向锚外部代理提供新 COA</li>
<li>锚外部代理帮助转发后续数据报</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="无线局域网IEEE802-11"><a href="#无线局域网IEEE802-11" class="headerlink" title="无线局域网IEEE802.11"></a>无线局域网IEEE802.11</h2><p>使用 CSMA&#x2F;CA<br>具有降低传输速率以增加传输距离的能力<br>支持基础设施模式（配置了接入点）和自组织模式（端端直接互连）</p>
<h3 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h3><ul>
<li>基站：又称为接入点AP<ul>
<li>安装时被分配一个服务集标识符 SSID</li>
<li>分配一个信道号，每个 AP 只能选择一个信道</li>
<li>以 IEEE802.11b 为例<ul>
<li>共有 11 个信道</li>
<li>两个信道由 4 个以上信道隔开才无重叠</li>
<li>只有 1,6,11 三个非重叠信道</li>
</ul>
</li>
</ul>
</li>
<li>基本服务集 BSS：包含一个或多个无线站点（如手机）和一个接入点的中央基站<br>每个无线站点和接入点具有 6 字节 MAC 地址，存储在适配器固件中，由 IEEE 管理，理论上全球唯一</li>
</ul>
<h4 id="无线主机发现AP"><a href="#无线主机发现AP" class="headerlink" title="无线主机发现AP"></a>无线主机发现AP</h4><ul>
<li>每个 AP 周期性发送信标帧，包括其 SSID 和 MAC 地址</li>
<li>用户扫描 11 个信道，获得信标帧后，选择其中一个 AP 关联</li>
<li>关联后加入该 AP 所属子网</li>
<li>向子网发送 DHCP 发现报文，获取子网中的 IP 地址，子网掩码，默认网关 IP 地址，本地域名服务器 IP 地址<br><strong>被动扫描：</strong> 无线主机扫描信道，监听<strong>信标帧</strong><br><strong>主动扫码：</strong> 主机向范围内所有 AP 发送<strong>探测帧</strong></li>
</ul>
<h3 id="IEEE-802-11的-MAC-协议"><a href="#IEEE-802-11的-MAC-协议" class="headerlink" title="IEEE 802.11的 MAC 协议"></a>IEEE 802.11的 MAC 协议</h3><p>采用带碰撞避免的 CSMA 即 CSMA&#x2F;CA<br>由于误比特率较高，使用链路层确认重传 ARQ 方案</p>
<h4 id="信道预约"><a href="#信道预约" class="headerlink" title="信道预约"></a>信道预约</h4><ul>
<li>发送数据前，先监听信道</li>
<li>若空闲，等待一个分布式帧间间隔 DIFS 后，发送一个请求发送 RTS 控制帧</li>
<li>目的站收到后如果介质空闲，则等待一个短帧间间隔 SIFS </li>
<li>发送允许发送 CTS 控制帧给所有站点，其中包括通信持续时间（NAV）</li>
<li>其他站点可以监听两者通信，持续期间不会发送</li>
<li>发送站接收到CTS 后等待 SIFS，发送数据</li>
<li>目的站接收完毕，等待 SIFS 发送 确认帧 ACK<br><strong>优点：</strong></li>
<li>只在多个站点同时发送 RTS 时可能冲突，概率很低</li>
<li>避免隐藏站点问题</li>
</ul>
<h2 id="蜂窝网络"><a href="#蜂窝网络" class="headerlink" title="蜂窝网络"></a>蜂窝网络</h2><p>IEEE802.11 覆盖范围有限，由蜂窝网络增大覆盖面积<br>便于随时随地接入因特网</p>
<h3 id="体系结构-1"><a href="#体系结构-1" class="headerlink" title="体系结构"></a>体系结构</h3><p>第一代1G：为语音通话设计，模拟FDMA系统，已被淘汰<br>2G：</p>
<ul>
<li>最具代表性的是 GSM</li>
<li>使用 200Hz 带宽</li>
<li>通过 GPRS 和 EDGE 等技术，接入互联网<br><strong>GSM蜂窝：</strong></li>
<li>被分为多个小区 cell，即地理覆盖区域</li>
<li>每个小区包含一个收发基站 BTS，负责向位于校区内部的移动站点发送或接收信号</li>
<li>使用 FDMA&#x2F;TDMA 组合技术：<ul>
<li>信道被划分为F 个子频带</li>
<li>每个子频带，时间被划分为T 个复用帧的时隙</li>
<li>该信道能支持 F*T 个并发呼叫</li>
</ul>
</li>
<li>一个基站控制器 BSC 服务几十个 BTS<ul>
<li>为用户分配 BTS 信道</li>
<li>寻呼：找出移动用户所在 cell</li>
<li>移动用户切换</li>
</ul>
</li>
<li>GSM基站系统 BSS 由 STS 和 BSC 构成</li>
<li>通过移动交换中心 MSC 管理多个 BSC</li>
<li>蜂窝服务提供商由若干个 MSC 构成</li>
</ul>
<h4 id="GSM-的移动性管理"><a href="#GSM-的移动性管理" class="headerlink" title="GSM 的移动性管理"></a>GSM 的移动性管理</h4><p>一种间接路由选择方法管理移动性：</p>
<ul>
<li>用户向某个蜂窝网提供商订购了服务</li>
<li>该蜂窝网成了该用户归属网络<ul>
<li>归属网络维护一个归属位置注册器 HLR，包括每个用户永久电话号码和位置信息</li>
<li>当一个呼叫定位到用户，将与归属网络 MSC 联系</li>
</ul>
</li>
<li>用户当前所在网络为被访网络<ul>
<li>维护一个访问者位置注册器 VLR，记录服务网络中每一个用户</li>
<li>用于协调到达或离开用户的呼叫建立</li>
</ul>
</li>
</ul>
<h5 id="呼叫过程"><a href="#呼叫过程" class="headerlink" title="呼叫过程"></a>呼叫过程</h5><ol>
<li>通信者拨打电话号码后，通过前几位，判别归属网络，到达归属 MSC</li>
<li>MSC 查询 HLR 确定用户位置，返回临时漫游号码 MSRN（当用户进入被访网络后，给用户临时分配）</li>
<li>如果 HLR 不具有漫游号码，访问 VLR 地址，获取漫游号码</li>
<li>确定漫游号码后，归属 MSC 向被访网络 MSC 呼叫</li>
<li>被访网络 MSC 通过为用户提供服务的基站呼叫用户<br>切换：用户切换为其提供服务的基站</li>
</ol>
<h3 id="3G"><a href="#3G" class="headerlink" title="3G"></a>3G</h3><p>由国际电信联盟 ITU 提出<br>被分为 CDMA 和 TDMA 两大类<br>CDMA 占主导</p>
<h3 id="4G"><a href="#4G" class="headerlink" title="4G"></a>4G</h3><p>更高速率<br>由 3GPP 组织推出LTE</p>
<h3 id="5G"><a href="#5G" class="headerlink" title="5G"></a>5G</h3><p>由三星提出<br>有望共用一个标准</p>
<h2 id="移动IP网络"><a href="#移动IP网络" class="headerlink" title="移动IP网络"></a>移动IP网络</h2><p>由三部分组成：</p>
<ul>
<li>代理发现</li>
<li>向归属代理注册</li>
<li>数据报的间接路由选择</li>
</ul>
<h3 id="代理发现"><a href="#代理发现" class="headerlink" title="代理发现"></a>代理发现</h3><p>当某移动 IP 站点到达新网络，必须让外部代理过归属代理知道其身份，通过新的网络地址，使移动结点知道自己进入一个新的外部网络<br>两种方法实现：</p>
<ul>
<li>代理通告：<ul>
<li>代理周期性得广播一个路由器发现 ICMP 报文，其中包含代理的 IP 地址</li>
</ul>
</li>
<li>代理请求：<ul>
<li>移动结点广播一个代理请求ICMP报文</li>
<li>收到该请求的代理直接向该接点单播一个含有 COA 的代理通告</li>
</ul>
</li>
</ul>
<h3 id="向归属代理注册"><a href="#向归属代理注册" class="headerlink" title="向归属代理注册"></a>向归属代理注册</h3><p>注册和注销 COA 的协议<br>移动结点收到代理通告后，发出注册请求，到达外部代理和归属代理<br>归属代理收到后发出注册应答，到达外部代理和移动代理</p>
<h2 id="其他典型无线网络"><a href="#其他典型无线网络" class="headerlink" title="其他典型无线网络"></a>其他典型无线网络</h2><h3 id="全球微波互联接入WiMax"><a href="#全球微波互联接入WiMax" class="headerlink" title="全球微波互联接入WiMax"></a>全球微波互联接入WiMax</h3><p>IEEE802.16<br>媲美有线网，一个信号塔覆盖数千米，传输距离更远，速度更快<br>不能实现用户移动过程中无缝切换，服务质量差，组网性能差</p>
<h3 id="蓝牙"><a href="#蓝牙" class="headerlink" title="蓝牙"></a>蓝牙</h3><p>IEEE802.15.1<br>小范围，低功率，低成本</p>
<h3 id="ZigBee"><a href="#ZigBee" class="headerlink" title="ZigBee"></a>ZigBee</h3><p>IEEE802.15.4<br>较之蓝牙，低功率，低速率，低工作周期<br>往往用于智能传感器设备</p>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>第八章 网络安全基础</title>
    <url>/%E7%AC%AC8%E7%AB%A0%20%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>基本属性：</p>
<ul>
<li>机密性<ul>
<li>只有发送方和预定接收方能理解报文内容</li>
<li>发送前加密</li>
</ul>
</li>
<li>消息完整性：发送篡改一定会被检测到</li>
<li>可访问和可用性：允许授权用户或实体使用</li>
<li>身份认证：对数据来源进行确认</li>
</ul>
<h3 id="安全威胁"><a href="#安全威胁" class="headerlink" title="安全威胁"></a>安全威胁</h3><p>映射：</p>
<ul>
<li>攻击前探路找出运行了什么服务</li>
<li>利用 ping 确定主机地址</li>
<li>利用端口扫描工具，如 Nmap ，依次尝试与每个端口建立 TCP 连接<br>嗅探：</li>
<li>通常发生于以太网和无线网</li>
<li>利用混杂模式的网络接口，接收广播帧，读到未加密数据<br>IP 欺骗：设置分组的源 IP 地址为任意值</li>
</ul>
<h2 id="数据加密"><a href="#数据加密" class="headerlink" title="数据加密"></a>数据加密</h2><p>密码学是信息安全的核心基础</p>
<ul>
<li>密码编码学</li>
<li>密码分析学<br>明文-&gt;加密-&gt;密文-&gt;解密-&gt;密文<br>密码体制 5 要素：</li>
<li>M：明文空间，可能出现的明文的有限集</li>
<li>C：密文空间</li>
<li>K：密钥空间</li>
<li>E：加密算法</li>
<li>D：解密算法<br>必须满足：</li>
<li>Dk（Ek（x））&#x3D; x</li>
<li>破译者有效时间内不能破解 K 或明文 x</li>
</ul>
<h3 id="传统加密"><a href="#传统加密" class="headerlink" title="传统加密"></a>传统加密</h3><h4 id="替代密码"><a href="#替代密码" class="headerlink" title="替代密码"></a>替代密码</h4><p>经典应用位凯撒密码<br>如将 q &#x3D; 26 的字母表右移 k 位<br>例题与公式见 P273</p>
<h4 id="换位密码"><a href="#换位密码" class="headerlink" title="换位密码"></a>换位密码</h4><p>打乱明文字符的位置和次序</p>
<ul>
<li>将明文 P 按密钥 K 的长度 n 进行分组</li>
<li>如果不是整数倍，则按约定填充</li>
<li>K 一般为无重复字母的单词</li>
<li>根据 K 中字母在字母表的顺序，更改每个组的输出顺序</li>
</ul>
<h3 id="对称密钥加密"><a href="#对称密钥加密" class="headerlink" title="对称密钥加密"></a>对称密钥加密</h3><p>加密密钥和解密密钥相同，分为：</p>
<ul>
<li>流密码（序列密码）：伪随机数发生器产生密码流，对明文消息流加密</li>
<li>分组密码（块密码）：将明文消息分成若干固定长度的消息组，每组单独加密&#x2F;解密<br>计算机网络常用的对称密钥加密为分组加密，常见的有：</li>
</ul>
<h4 id="DES"><a href="#DES" class="headerlink" title="DES"></a>DES</h4><p>使用 56 位的密钥，明文为 64位分组序列，共进行16 轮的加密，每轮加密都会进行复杂的替代和置换操作，并且每轮加密都会使用一个由 56位密钥导出的48 位子密钥，最终输出与明文等长的 64位密文</p>
<h4 id="三重DES"><a href="#三重DES" class="headerlink" title="三重DES"></a>三重DES</h4><p>避免由于密码位数太短， DES 被穷举攻击<br>使用 2 个密钥执行 3 次 DES 算法：</p>
<ul>
<li>加密过程：加密-解密-加密</li>
<li>解密过程：解密-加密-解密</li>
</ul>
<h4 id="AES加密算法"><a href="#AES加密算法" class="headerlink" title="AES加密算法"></a>AES加密算法</h4><p>密钥和分组长度可变<br>使用置换，替代，多轮加密，轮数随密钥和分组长度增加而增加<br>加密过程：字节替代，行位移，列混淆，轮密钥加<br>解密过程为上述逆过程</p>
<h4 id="IDEA加密算法"><a href="#IDEA加密算法" class="headerlink" title="IDEA加密算法"></a>IDEA加密算法</h4><p>广泛应用于安全电子邮件<br>64 位分组长度，密钥 128 位<br>速度快，抵抗密码分析</p>
<h3 id="非对称-公开密钥加密"><a href="#非对称-公开密钥加密" class="headerlink" title="非对称&#x2F;公开密钥加密"></a>非对称&#x2F;公开密钥加密</h3><p>避免密码分发时被偷取，设置公开密钥密码</p>
<ul>
<li>A有公钥 K+与私钥 K-</li>
<li>当 B 给 A 发送：<ul>
<li>B 使用 A 的公钥与众所周知的加密算法加密给 A 的报文 m，即 K+（m）</li>
<li>A 接收到后使用私钥解密，即 K-（K+（m）），得到 m</li>
</ul>
</li>
<li>当 A 给 B 发送：<ul>
<li>A 使用私钥加密，即 K-（m）</li>
<li>B 用公钥解密，即 K+（K-（m））&#x3D; m<br>使用最广泛的时 RSA 算法，通常与DES 或 AES结合使用，即使用 DES 密钥作为公钥</li>
</ul>
</li>
</ul>
<h2 id="消息完整性"><a href="#消息完整性" class="headerlink" title="消息完整性"></a>消息完整性</h2><p>也称为消息认证，用于证明报文来自声称的发送方，预防篡改，预防抵赖（包括否认发送与否认接收）</p>
<h3 id="检测方法"><a href="#检测方法" class="headerlink" title="检测方法"></a>检测方法</h3><p>需要用到密码散列函数H（m），对报文散列化</p>
<ul>
<li>单向性：无法通过散列值h逆推出报文</li>
<li>抗弱碰撞性：对于报文 x，计算上不可能找到 y，使 H（x） &#x3D; H（y）</li>
<li>抗强对抗性：任意两个不同的报文 x，y，其散列值不同</li>
</ul>
<h4 id="典型散列函数"><a href="#典型散列函数" class="headerlink" title="典型散列函数"></a>典型散列函数</h4><h5 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h5><p>可以得到 128 位散列值<br>存在相同散列值的报文，且已被破解</p>
<h5 id="SHA-1"><a href="#SHA-1" class="headerlink" title="SHA-1"></a>SHA-1</h5><p>生成 160 位散列值，常用于创建数字签名</p>
<h3 id="报文认证"><a href="#报文认证" class="headerlink" title="报文认证"></a>报文认证</h3><p>报文摘要：h &#x3D; H（m），可以作为报文 m 的数字指纹<br>报文认证：利用数字指纹，验证：</p>
<ul>
<li>消息源：验证来源真实</li>
<li>消息：消息未被篡改</li>
</ul>
<h4 id="简单报文认证"><a href="#简单报文认证" class="headerlink" title="简单报文认证"></a>简单报文认证</h4><p>发送方将报文摘要和报文组成<strong>扩展报文（m,H(m)）</strong><br>接收方从扩展报文提取出报文 m，进行H（m），将结果与 h 做比较，若相等则认证成功<br><strong>缺陷：</strong> 由于散列函数是公开的，攻击者可以截获报文后，转为发送自己利用散列函数生成摘要，并组成的扩展报文，同样能完成报文认证，即无法实现对消息来源认证</p>
<h4 id="报文认证码MAC"><a href="#报文认证码MAC" class="headerlink" title="报文认证码MAC"></a>报文认证码MAC</h4><p>发送方和接收方共享一个认证密钥s<br>与上方的不同为所有散列函数计算变为：H（m+s）<br><strong>缺陷：</strong> 只要拥有认证密钥就能生成可以认证成功的扩展报文，即无法保证消息在接收方没被篡改</p>
<h3 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h3><p>解决上述两个方法的缺陷<br>引入非对称加密</p>
<h4 id="简单数字签名"><a href="#简单数字签名" class="headerlink" title="简单数字签名"></a>简单数字签名</h4><p>发送方利用私钥 K-加密报文 m，生气<strong>签名报文</strong> K-（m），发送扩展报文（m,K-(m)）给接收方<br>接收方使用发送方的公钥 K+解密，检验 K+(K-(m)) &#x3D; m,如果成立，则 m 一定是发送方加密的</p>
<h4 id="签名报文摘要"><a href="#签名报文摘要" class="headerlink" title="签名报文摘要"></a>签名报文摘要</h4><p>由于加密算法对整个报文加密计算量大，扩展报文数据量大，浪费接收方流量<br>发送方对报文摘要 H(m)使用私钥加密，K-(H(m))<br>其他与上文一样</p>
<h2 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h2><p>通过鉴别协议建立互相信任的各方的标识，仅当鉴别完成后，才继续工作</p>
<ul>
<li>接收方在收到消息前发送一个一次性随机数</li>
<li>随机数被发送方以对称或非对称加密</li>
<li>接收方解密后确认值为自己发送的随机数</li>
</ul>
<h2 id="密钥分发中心与证书认证机构"><a href="#密钥分发中心与证书认证机构" class="headerlink" title="密钥分发中心与证书认证机构"></a>密钥分发中心与证书认证机构</h2><p>对称密钥效率高，速度快<br>因此需要建立一个大家都信任的密钥分发中心 KDC</p>
<ul>
<li>每一方都和 KDC 之间都保持一个长期的共享密钥</li>
<li>双方借助 KDC 在通信双方之间创建一个临时的会话密钥，即对称密钥<br>分发方式一：</li>
<li>A 将会话密钥通过共享密钥加密后给 KDC</li>
<li>KDC 解密后利用 B 的共享密钥加密发送给 B</li>
<li>B 接收到后解密获取会话密钥，这样 A 和 B 的对称加密建立成功<br>方式二：</li>
<li>A向 KDC 发送与 B 通信的请求</li>
<li>KDC 随机选一个会话密钥，分别用 A 和 B 的共享密钥加密后，发给 A 和 B</li>
<li>A 和 B 接受并解密后，对称加密通信建立成功</li>
</ul>
<h3 id="证书认证机构"><a href="#证书认证机构" class="headerlink" title="证书认证机构"></a>证书认证机构</h3><p>用于证实你拥有的公钥是你要通信的实体的公钥<br>将公钥与特定实体绑定，并生成证书，通常由认证中心 CA 完成<br>A 想要 B 的公钥时，先获取 B 的公钥证书，然后通过 CA 的公钥解密证书以获得 B 的公钥</p>
<h2 id="防火墙与入侵检测系统"><a href="#防火墙与入侵检测系统" class="headerlink" title="防火墙与入侵检测系统"></a>防火墙与入侵检测系统</h2><p>隔离内部网络和公共互联网，筛选可以通过的分组<br>必须保证所有进出内部网络的流量都经过防火墙<br>分类：</p>
<ul>
<li>无状态分组过滤器：<ul>
<li>往往部署在内部网络和网络边缘路由器</li>
<li>筛选基于：<ul>
<li>IP 地址</li>
<li>端口号</li>
<li>ICMP 报文类型</li>
<li>TCP 报文段的 SYN 和 ACK 标志位</li>
</ul>
</li>
<li>使用访问控制列表 ACL 实现防火墙规则</li>
</ul>
</li>
<li>有状态分组过滤器：<ul>
<li>避免放行所有满足条件分组</li>
<li>使用连接表跟踪每个 TCP 连接，根据建立 SYN 和拆除 FIN，确定状态和是否放行</li>
</ul>
</li>
<li>应用网关：<ul>
<li>前两种都无法鉴别用户身份</li>
<li>会进行身份鉴别，只有授权用户才能与目的主机建立连接</li>
</ul>
</li>
</ul>
<h3 id="入侵检测系统IDS"><a href="#入侵检测系统IDS" class="headerlink" title="入侵检测系统IDS"></a>入侵检测系统IDS</h3><p>当观察到潜在的恶意流量，能产生警告<br>深入查到分组携带的实际数据<br><strong>非军事区 DMZ ：</strong> 低安全度区域，不仅进行深度分组检查，同时要将每个过往分组与大量特征进行比较</p>
<h2 id="网络安全协议"><a href="#网络安全协议" class="headerlink" title="网络安全协议"></a>网络安全协议</h2><h3 id="安全电子邮件"><a href="#安全电子邮件" class="headerlink" title="安全电子邮件"></a>安全电子邮件</h3><p>应用层安全协议<br>PGP 标准，对邮件的内容进行数字证书，保证不被篡改和不被否认<br>加密阶段：</p>
<ul>
<li>对报文 m 进行 SHA-1 散列函数散列，得到 H(m)</li>
<li>A 的私钥配合 RSA 算法进行数字签名，得到 K-(H(m))</li>
<li>压缩 m 和数字签名，并使用对称密钥 Ks 进行 3DES</li>
<li>将对称密钥使用 K-与 RSA 加密</li>
<li>对加密的密钥和压缩包进行 Base64编码<br>解密阶段：反过程</li>
</ul>
<h3 id="安全套接字层SSL"><a href="#安全套接字层SSL" class="headerlink" title="安全套接字层SSL"></a>安全套接字层SSL</h3><p>传输层安全协议，面向 TCP<br>Web 页面可能隐藏恶意程序，并且 HTTP 报文是明文形式传输，很容易遭受攻击<br>为了解决 Web 应用安全问题，在 应用层与传输层之间构建一个安全层，最经典的就是：</p>
<ul>
<li>安全套接字层 SSL</li>
<li>传输层安全 TLS<br>TLS 是 SSL 的变体，区别不大<br>SSL 提供的安全服务：</li>
<li>机密性</li>
<li>完整性</li>
<li>身份认证<br>HTTP 协议使用了 SSL 后称为安全 HTTP 或 HTTPS</li>
</ul>
<h3 id="IPSec"><a href="#IPSec" class="headerlink" title="IPSec"></a>IPSec</h3><p>网络层安全协议<br>创建运行在公共网络只上的虚拟专用网 VPN<br>核心协议是 AH 协议和 ESP 协议<br>两种模式</p>
<ul>
<li>传输模式</li>
<li>隧道模式<br>两两组合有四种组合</li>
</ul>
]]></content>
      <categories>
        <category>开发笔记</category>
        <category>网络相关</category>
      </categories>
      <tags>
        <tag>开发笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.16</title>
    <url>/V1.3.16/</url>
    <content><![CDATA[<blockquote>
<p>2024.7.28</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>公里数导入模板文档</li>
<li>主任批量驳回</li>
<li>工程车批量人员选择</li>
<li>选择需要文档生成的积分条目时提示框</li>
<li>点击待阅按钮时,如果没有,则显示驳回列表</li>
<li>用于自定义扣分的”安”类积分选项</li>
<li>涉及上限积分申请判断与自动拒绝</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>删除队长每月必发列表中的错误积分项</li>
<li>更改个人数据获取流程</li>
<li>更改部分权限</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>部分情况已读无法删除</li>
<li>部分情况交路表无法自动更新</li>
<li>主任用户查看不到已发流程</li>
<li>部分情况无法订阅通知</li>
<li>输入拒绝原因界面点击取消也继续执行程序</li>
</ol>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li>减少工程师用户需要获取的数据量,避免卡顿</li>
<li>增加错误可选积分项出现时的禁止弹窗</li>
<li></li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>上传文档生成积分模板</title>
    <url>/%E4%B8%8A%E4%BC%A0%E6%96%87%E6%A1%A3%E7%94%9F%E6%88%90%E7%A7%AF%E5%88%86%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<blockquote>
<p>欢迎自行取用 (・ω・)</p>
</blockquote>
<hr>
<h4 id="〜￣△￣-〜-点击此处下载考核数据上传模板"><a href="#〜￣△￣-〜-点击此处下载考核数据上传模板" class="headerlink" title="(〜￣△￣)〜 点击此处下载考核数据上传模板"></a><a href="../doc/%E8%80%83%E6%A0%B8%E6%A8%A1%E6%9D%BF.xlsx">(〜￣△￣)〜 点击此处下载考核数据上传模板</a></h4><h4 id="〜￣△￣-〜-点击此处下载半年安全公里数文档上传模板"><a href="#〜￣△￣-〜-点击此处下载半年安全公里数文档上传模板" class="headerlink" title="(〜￣△￣)〜 点击此处下载半年安全公里数文档上传模板"></a><a href="../doc/%E5%8D%8A%E5%B9%B4%E5%85%AC%E9%87%8C%E6%95%B0%E6%A8%A1%E6%9D%BF.xlsx">(〜￣△￣)〜 点击此处下载半年安全公里数文档上传模板</a></h4><h4 id="〜￣△￣-〜-点击此处下载业务考试成绩上传模板"><a href="#〜￣△￣-〜-点击此处下载业务考试成绩上传模板" class="headerlink" title="(〜￣△￣)〜 点击此处下载业务考试成绩上传模板"></a><a href="../doc/%E4%B8%9A%E5%8A%A1%E8%80%83%E8%AF%95%E6%A8%A1%E6%9D%BF.xlsx">(〜￣△￣)〜 点击此处下载业务考试成绩上传模板</a></h4><h4 id="〜￣△￣-〜-点击此处下载安全考试成绩上传模板"><a href="#〜￣△￣-〜-点击此处下载安全考试成绩上传模板" class="headerlink" title="(〜￣△￣)〜 点击此处下载安全考试成绩上传模板"></a><a href="../doc/%E5%AE%89%E5%85%A8%E8%80%83%E8%AF%95%E6%A8%A1%E6%9D%BF.xlsx">(〜￣△￣)〜 点击此处下载安全考试成绩上传模板</a></h4><h4 id="〜￣△￣-〜-点击此处下载捐款文档上传模板"><a href="#〜￣△￣-〜-点击此处下载捐款文档上传模板" class="headerlink" title="(〜￣△￣)〜 点击此处下载捐款文档上传模板"></a><a href="../doc/%E6%8D%90%E6%AC%BE%E6%A8%A1%E6%9D%BF.xlsx">(〜￣△￣)〜 点击此处下载捐款文档上传模板</a></h4>]]></content>
      <categories>
        <category>小乘排班</category>
        <category>材料相关</category>
      </categories>
      <tags>
        <tag>资源下载</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.15</title>
    <url>/V1.3.15/</url>
    <content><![CDATA[<blockquote>
<p>2024.7.4</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>业务考试与安全考试文档上传</li>
<li>使用情况表格</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>统一部分数据的数据格式,可能造成部分功能异常!!!</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>驳回导致分数负数</li>
<li>新队长用户积分功能不可用</li>
<li>部分情况工程师操作申请,积分变动失败</li>
<li>部分情况收不到推送通知</li>
<li>部分情况总分计算错误</li>
<li>更新交路表无法自动替换老版本</li>
<li>部分情况无法操作已读</li>
<li>部分情况每月必发功能不可用</li>
</ol>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li>使用说明网站减少首页内容,增加读取速度</li>
<li>将体量大的图片放入SM图床,减少服务器流量占用</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.14</title>
    <url>/V1.3.14/</url>
    <content><![CDATA[<blockquote>
<p>2024.6.21</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>更新时可暂停积分功能使用</li>
<li>新增文档上传生成积分项功能</li>
<li>新增多个服务器返回信息弹窗</li>
<li>数据库增加对形成积分数据的过程数据存储,增加抗灾能力</li>
<li>队长必发功能添加自动识别季度末和年末,以生成额外选项</li>
<li>系统开发者可以手动处理单条积分条目上限,即将超过上限的积分申请积分改为0</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>现在只提前下载积分数值信息,详细加分项在查看详情时再下载</li>
<li>主任用户现在仅下载本车间数据</li>
<li>暂停使用驳回功能</li>
<li>裁剪错误提示弹窗内容</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>登陆时卡顿</li>
<li>多选人员的积分条目更新报错</li>
</ol>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li>合并积分数据相关数据库访问操作,降低数据库压力</li>
<li>模块化数据库访问相关代码,方便复用,增加可读性</li>
<li>以增加一个复杂运算为代价,将上传的数据减少到了1%</li>
<li>拆分积分数据,并分表存储,减小单个数据单元大小</li>
<li>统一各类excel上传与处理逻辑,方便以后功能扩展</li>
<li>增加对excel生成积分的中间数据的存储,方便恢复系统</li>
<li>进一步拆分数据,减少对大数据的操作</li>
<li>分页下载详细积分数据,避免数据大小限制</li>
<li>设置详细数据缓存,避免重复下载</li>
<li>降低运行时缓存数据大小</li>
<li>移除审批界面引入积分数据的步奏</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.13</title>
    <url>/V1.3.13/</url>
    <content><![CDATA[<blockquote>
<p>2024.6.4</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>加载数据进度条</li>
<li>在队长每月必发积分条目列表中增加了数条</li>
<li>参考导入人员信息方法,上传表格生成考核与捐款赋分</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>加载过程分割为多次进行,避免单次获取过多数据,导致系统加载失败</li>
<li>将部分积分类型的算法改为下载后合成,增加可溯源恢复性</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>队长每月必发只记录自己发的积分申请,改为全队已发</li>
<li>队长每月必发功能已发数字错误</li>
<li>队长每月必发功能数据筛选逻辑优化</li>
<li>部分情况,队长和司机收不到积分信息</li>
<li>部分情况收不到新待处理流程通知</li>
<li>工程师无法通过点击通知进入正确版本小程序</li>
<li>带小数点数字计算逻辑问题</li>
</ol>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li>裁剪大数据,减少单次渲染的工作量</li>
<li>改用同步函数读取数据,避免数据量增大后,读取失败</li>
<li>即时删除不再用到的数据,减少内存占用</li>
<li>将处理上限为1M的缓存操作改为上限为100M的数据存储操作</li>
<li>提取出所有访问数据库的函数,放到一个文件夹方便复用和管理</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>司机用户积分操作</title>
    <url>/%E5%8F%B8%E6%9C%BA%E7%94%A8%E6%88%B7%E7%A7%AF%E5%88%86%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<blockquote>
<p>每类用户有不同的可申请积分项,其他用户可参考本文</p>
</blockquote>
<hr>
<h2 id="发起积分流程"><a href="#发起积分流程" class="headerlink" title="发起积分流程"></a>发起积分流程</h2><h3 id="相关设定"><a href="#相关设定" class="headerlink" title="相关设定"></a>相关设定</h3><ul>
<li>可以随时记录自己满足的加分项</li>
<li>仅可选择非红字标识积分条目</li>
<li>可以记录<strong>最早到上个月1号</strong>的加分项</li>
<li>每个月<strong>只能</strong>在25号之后提交</li>
</ul>
<h3 id="发起步奏"><a href="#发起步奏" class="headerlink" title="发起步奏"></a>发起步奏</h3><p><img src="https://s2.loli.net/2024/06/29/mNOuYni81Ilw52j.gif"></p>
<ol>
<li>新建并选择可以选的加分项</li>
<li>选择上个月和本月日期</li>
<li>如果可以选择倍数,请设置,不设置则为默认值</li>
<li>添加备注</li>
<li>新建完成</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>司机功能</category>
      </categories>
      <tags>
        <tag>积分功能</tag>
      </tags>
  </entry>
  <entry>
    <title>排班相关</title>
    <url>/%E6%8E%92%E7%8F%AD%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<blockquote>
<p>自动生成用户排班数据的相关功能</p>
</blockquote>
<hr>
<h2 id="司机版"><a href="#司机版" class="headerlink" title="司机版"></a>司机版</h2><p><img src="https://s2.loli.net/2024/06/29/IzXGgQTmsuH2tZe.gif"></p>
<ul>
<li>可以查看到本月最后一天为止的所有车次与发车时间</li>
<li>可以查指定班次的车次与发车时间</li>
<li>提供本月全队公里数排行</li>
</ul>
<h2 id="队长版"><a href="#队长版" class="headerlink" title="队长版"></a>队长版</h2><p><img src="https://s2.loli.net/2024/06/29/gtaE2FQ9uTKrSz6.gif"></p>
<ul>
<li>可以查看当日全队班次信息与特殊交路信息</li>
<li>可以根据车次查由谁驾驶</li>
<li>可以发布全队人员可见通知</li>
</ul>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>排班功能</tag>
      </tags>
  </entry>
  <entry>
    <title>数据导出文档</title>
    <url>/%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<blockquote>
<p>不同用户可见数据不同</p>
<blockquote>
<p>司机以上可以导出数据,生成Excel</p>
</blockquote>
</blockquote>
<hr>
<h2 id="数据转文档网站"><a href="#数据转文档网站" class="headerlink" title="数据转文档网站"></a>数据转文档网站</h2><p><strong>请务必在浏览器收藏,方便使用</strong><br><a href="https://www.lddgo.net/string/json-to-excel">在线JSON转Excel (lddgo.net)</a></p>
<hr>
<h2 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h2><blockquote>
<p>以快捷排行数据为例<br><img src="https://s2.loli.net/2024/06/29/8gb63tUYJZQH1La.gif"></p>
</blockquote>
<p><strong>步奏:</strong></p>
<ol>
<li>开启表格</li>
<li>长按表格提示是否复制表格数据</li>
<li>确认后复制进上方给出网站</li>
<li>点击下载</li>
</ol>
<p><strong>注意:</strong><br>各种表格导出方式略有不同,但复制数据与下载文档方式没区别</p>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>积分功能</tag>
      </tags>
  </entry>
  <entry>
    <title>订阅消息通知</title>
    <url>/%E8%AE%A2%E9%98%85%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5/</url>
    <content><![CDATA[<blockquote>
<p>队长和工程师用户进入移动审批时会弹窗提醒订阅</p>
</blockquote>
<hr>
<p><img src="https://s2.loli.net/2024/06/29/H5xyNK49Sq8EPUD.gif"></p>
<p>同意之后<br>会收到微信弹出消息<br>提示有新的未处理流程</p>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>积分功能</tag>
      </tags>
  </entry>
  <entry>
    <title>登陆与密码</title>
    <url>/%E7%99%BB%E9%99%86%E4%B8%8E%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<blockquote>
<p>仅能通过工号登陆</p>
</blockquote>
<hr>
<h1 id="登陆与密码说明"><a href="#登陆与密码说明" class="headerlink" title="登陆与密码说明"></a>登陆与密码说明</h1><p>密码将<strong>绑定微信号与工号</strong><br>即<strong>只有在</strong>换了微信号使用该工号登陆时<strong>才需要</strong>输入密码</p>
<hr>
<h2 id="登陆失败"><a href="#登陆失败" class="headerlink" title="登陆失败"></a>登陆失败</h2><p>如果登陆时显示:<br><img src="https://s2.loli.net/2024/06/29/XUnDVbwWQAg5N2Y.jpg"><br>表示个人信息尚未导入数据库<br>请联系队长确认</p>
<hr>
<h2 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h2><p><img src="https://s2.loli.net/2024/06/29/x9jDtiHfrcRdXBP.gif"></p>
<ul>
<li>请牢记密码</li>
<li>密码只有在更换微信登陆工号时需要使用</li>
<li>绝大部分用户从未使用过密码登陆,导致遗忘的比比皆是</li>
</ul>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>登陆相关</tag>
      </tags>
  </entry>
  <entry>
    <title>准备材料</title>
    <url>/%E5%87%86%E5%A4%87%E6%9D%90%E6%96%99/</url>
    <content><![CDATA[<blockquote>
<p>只有导入了用户数据才能登陆系统</p>
</blockquote>
<hr>
<p><a href="../doc/2%E5%8F%B7%E7%BA%BF%E4%B8%89%E9%98%9F%E7%94%A8%E6%88%B7%E7%A7%AF%E5%88%86%E4%BF%A1%E6%81%AF%E8%A1%A8%E6%A8%A1%E6%9D%BF202401111951.xlsx">(〜￣△￣)〜 点击此处下载个人信息文档</a></p>
<p><strong>注意:</strong></p>
<p>每一个可以打开<strong>下拉框</strong>的单元格<br><strong>必须</strong>在下拉框中选择信息!!!<br><img src="/../images/userInfoExcel.png" alt="信息模板填写"></p>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>资源下载</tag>
        <tag>登陆相关</tag>
      </tags>
  </entry>
  <entry>
    <title>介绍与进入</title>
    <url>/%E4%BB%8B%E7%BB%8D%E4%B8%8E%E8%BF%9B%E5%85%A5/</url>
    <content><![CDATA[<blockquote>
<p>如果有表达不清楚的地方,欢迎联系工号604058</p>
</blockquote>
<hr>
<h2 id="功能简介"><a href="#功能简介" class="headerlink" title="功能简介"></a>功能简介</h2><p><strong>积分的组成</strong>由用户自身初始数据与后期积分操作相关</p>
<p>本程序制作的初衷在于:</p>
<ul>
<li>让各级别用户都能参与</li>
<li>通过各司其职避免某级别用户工作量过大</li>
<li>避免遗漏加分带来的损失</li>
<li>可视化展现积分变化,较少信息差</li>
</ul>
<hr>
<h2 id="如何进入小程序"><a href="#如何进入小程序" class="headerlink" title="如何进入小程序"></a>如何进入小程序</h2><p><strong>方法一：</strong><br>微信扫下方二维码<br><img src="https://s2.loli.net/2024/06/29/Yf4QEC2LSXnhiVB.jpg" alt="二维码"></p>
<p><strong>方法二：</strong><br>如下图所示，在微信主页面下拉，搜索小乘排班<br><img src="https://s2.loli.net/2024/06/29/WlXLPnc8bzDCRtA.gif" alt="搜索"></p>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>通用功能</category>
      </categories>
      <tags>
        <tag>登陆相关</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.12</title>
    <url>/V1.3.12/</url>
    <content><![CDATA[<blockquote>
<p>2024.5.20</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>自动生成队长用户月度&#x2F;季度&#x2F;半年&#x2F;全年必发积分流程列表</li>
<li>记录队长发送过的积分流程,标注未发送的</li>
<li>主任用户可以选择驳回的积分条目,而不是驳回整个积分申请</li>
<li>快速排行榜表格现在可以根据用户技能等级筛选表格项</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>取消积分表格同名项合并</li>
<li>积分流程详情不再同名项合并</li>
<li>仅检测最近两个月发出的申请</li>
<li>更改部分弹窗位置</li>
<li>删除模板相关功能</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>队长发出积分申请工程师无法收到推送通知</li>
<li>部分按钮无法使用</li>
<li>表格数据条数显示错误</li>
<li>部分情况流程处理完后红点不消失</li>
<li>流程已被他人处理,依然弹出红点</li>
<li>积分流程详情不显示赋分情况</li>
<li>部分情况工程师收不到工程车积分申请</li>
<li>部分情况驳回积分信息系统无法识别</li>
</ol>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ol>
<li>压缩图片,减少加载时间</li>
<li>重复代码抽象公共部分,形成公用函数</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
  <entry>
    <title>司机更改个人信息</title>
    <url>/%E5%8F%B8%E6%9C%BA%E6%9B%B4%E6%94%B9%E4%B8%AA%E4%BA%BA%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<blockquote>
<p>个人信息会影响部分积分条目</p>
<blockquote>
<p>更改后会自动生成对应的分数</p>
</blockquote>
</blockquote>
<hr>
<h2 id="查看与发起步奏"><a href="#查看与发起步奏" class="headerlink" title="查看与发起步奏"></a>查看与发起步奏</h2><p><img src="https://s2.loli.net/2024/06/29/DPSK5miEHgIQNlr.gif"></p>
<ol>
<li>点击<strong>积分更改</strong>查看现有个人信息</li>
<li>点击<strong>发起变更</strong>以选择需要更改的项目</li>
<li>点击<strong>确定</strong>向队长发出申请</li>
<li>队长同意则更改成功</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>使用说明</category>
        <category>司机功能</category>
      </categories>
      <tags>
        <tag>积分功能</tag>
      </tags>
  </entry>
  <entry>
    <title>V1.3.11</title>
    <url>/V1.3.11/</url>
    <content><![CDATA[<blockquote>
<p>2024.5.14</p>
</blockquote>
<hr>
<h2 id="新增"><a href="#新增" class="headerlink" title="新增"></a>新增</h2><ol>
<li>主页版本号显示</li>
<li>车间主任现在可以选择某用户积分明细中的条目，进行删除，删除后将删除整个积分申请流程，并通知所有分数发生变动的人员</li>
<li>考虑到使用不便,删除了查询已阅按钮,添加整月分数变化表格代替</li>
<li>删除了查询已办按钮,添加了车队积分详情表代替</li>
</ol>
<h2 id="更改"><a href="#更改" class="headerlink" title="更改"></a>更改</h2><ol>
<li>工程师的待办列表将置顶自己负责车队的积分条目</li>
<li>更换建议的表格生成网站 - <a href="https://www.lddgo.net/string/json-to-excel">https://www.lddgo.net/string/json-to-excel</a></li>
<li>移除司机每月提交申请次数与相同条目次数限制</li>
<li>部分按钮增加了圆角和阴影</li>
</ol>
<h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><ol>
<li>修复某些跳转太快的情况，数据加载不全的问题</li>
<li>修复了班表更新失败的问题</li>
<li>修复了部分情况通知接收不到问题</li>
<li>修复了积分页面数据不同步问题</li>
</ol>
<h2 id="系统优化"><a href="#系统优化" class="headerlink" title="系统优化"></a>系统优化</h2><ol>
<li>优化内存释放逻辑,避免系统卡顿</li>
<li>删除已弃用代码，增加渲染速度</li>
<li>压缩部分图片，增加渲染速度</li>
<li>对于小数据，使用全局变量保存实现页面间数据共享，减少页面加载时间</li>
<li>对于大数据，使用按需加载策略，减少页面加载时间</li>
<li>尽量避免使用setdata方法,降低渲染负担</li>
<li>计算时使用浅复制替代深复制,降低运算负担</li>
<li>增加筛选条件减减轻络数据传输负担</li>
<li>彻底解耦合审批页面与积分页面数据，提高系统灵活性</li>
<li>重写积分申请的处理算法，计算量降低超过99%</li>
<li>优化红点检测代码,从全量变为增量,处理速度理论上提高800%</li>
</ol>
]]></content>
      <categories>
        <category>小乘排班</category>
        <category>更新日志</category>
      </categories>
      <tags>
        <tag>V1.3</tag>
      </tags>
  </entry>
</search>
